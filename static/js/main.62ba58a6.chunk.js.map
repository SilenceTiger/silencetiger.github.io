{"version":3,"sources":["assets/images/earth.jpg","assets/images/earth-high.jpg","assets/images/universe.jpg","assets/images/sun.jpg","assets/images/moon.jpg","layout/LoginForm.jsx","layout/LoginBackground.jsx","layout/LoginLayout.jsx","layout/menuTree.js","layout/PrimaryMenu.jsx","layout/PrimaryHeader.jsx","modules/echarts/Earth.jsx","modules/echarts/index.js","utils/delay.js","modules/three/start/Introduce.jsx","modules/three/start/SimpleEarth.jsx","modules/three/start/ThreeStar.jsx","modules/three/index.js","modules/home/Home.jsx","modules/index.js","modules/home/index.js","layout/PrimaryContent.jsx","layout/PrimaryLayout.jsx","App.js","index.js"],"names":["module","exports","LoginForm","history","useHistory","useLayoutEffect","document","getElementById","setAttribute","className","name","initialValues","remember","onFinish","params","username","password","localStorage","setItem","push","Item","rules","required","message","prefix","UserOutlined","Password","LockOutlined","type","htmlType","style","width","echarts","registerMap","world","LoginBackground","props","chart","this","init","refs","window","addEventListener","resize","bind","initChart","dispose","removeEventListener","canvas","createElement","mapChart","height","setOption","geo","map","label","fontSize","itemStyle","areaColor","borderColor","emphasis","color","top","left","right","bottom","boundingCoords","option","globe","globeRadius","baseTexture","require","heightTexture","environment","displacementScale","shading","light","ambient","intensity","main","shadow","layers","texture","series","ref","React","Component","LoginLayout","createContext","location","hash","key","icon","HomeOutlined","CodepenOutlined","subMenu","PrimaryMenu","Menus","menuTree","menu","transferTree","subMenuTitle","subMenuArr","forEach","childMenu","SubMenu","title","onClick","param","theme","mode","defaultSelectedKeys","assembleTree","menus","parent","i","length","subMenus","path","PrimaryLayout","layoutContext","useContext","LayoutContext","useLocation","breadRoute","useMemo","targetMenu","getMenuByPath","pathname","split","userMenu","removeItem","collapsed","MenuUnfoldOutlined","MenuFoldOutlined","toggleCollapse","index","overlay","Earth","routes","component","delay","Promise","resolve","setTimeout","Introduce","scene","renderer","camera","cubeMesh","sphereMesh","cylindeMesh","T0","T1","THREE","initMesh","axisHelper","add","point","position","set","three","clientWidth","clientHeight","k","s","lookAt","setSize","setClearColor","appendChild","domElement","Date","renderGL","OrbitControls","sphereGeo","cubeGeo","cylindeGeo","materialLambert","opacity","transparent","materialBasic","wireframe","materialPhong","specular","shininess","t","render","rotateY","requestAnimationFrame","id","earthImg","ImageLoader","load","img","needsUpdate","geometry2","o","p1","p2","cp","addVectors","divideScalar","l","distanceTo","L","K","multiplyScalar","vertices","material2","size","points","geometry","curve","points1","getPoints","setFromPoints","material","line","SPHERES","raduis","cita","T","R","SimpleEarth","clock","children","remove","cancelAnimationFrame","Scene","initBackground","initLight","initCameraAndRenderer","Clock","onresize","updateProjectionMatrix","geom","Geometry","ParticleBasicMaterial","vertexColors","n","particle","Vector3","Math","random","color_k","colors","Color","cloud","ParticleSystem","item","createSphere","data","SphereGeometry","Texture","MeshPhongMaterial","side","DoubleSide","Mesh","mesh","directionalLight","DirectionalLight","directionalLight2","AmbientLight","OrthographicCamera","WebGLRenderer","antialias","delta","getDelta","rotation","y","earth","PI","cos","sin","moon","e","offsetTop","offsetLeft","x","clientX","clientY","raycaster","Raycaster","setFromCamera","Vector2","intersectsArr","intersects","intersectObjects","console","log","object","Home","svg","d3","append","attr","on","m","insert","transition","duration","ease","sqrt","preventDefault","PrimaryContent","allRoutes","mods","_allRoutes","mod","getAllRoutes","modules","route","PageComponent","exact","routeprops","Sider","useState","setCollapsed","onhashchange","getItem","Provider","value","trigger","collapsible","PrimaryHeader","App","locale","zhCN","basename","ReactDOM"],"mappings":"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","file":"static/js/main.62ba58a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/earth.c29637be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/earth-high.79ed7ae3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/universe.aeaf4baf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sun.00b3bfb2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/moon.8ee94bb4.jpg\";","import React, { useLayoutEffect } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\"\nimport { useHistory } from \"react-router-dom\"\nconst LoginForm = () => {\n  const history = useHistory()\n  const onFinish = (params) => {\n    if (params.username === \"admin\" && params.password === \"123\") {\n      localStorage.setItem(\"LOGIN\", \"1\")\n      history.push(\"/\")\n    }\n  }\n  useLayoutEffect(() => {\n    document\n      .getElementById(\"login-form_username\")\n      .setAttribute(\"autocomplete\", \"off\")\n  }, [])\n  return (\n    <div className=\"login-form\">\n      <div className=\"title\">React Visual Admin</div>\n      <Form\n        name=\"login-form\"\n        initialValues={{\n          remember: false,\n        }}\n        onFinish={onFinish}\n      >\n        <Form.Item\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your username!\",\n            },\n          ]}\n        >\n          <Input prefix={<UserOutlined className=\"login-icon\" />} />\n        </Form.Item>\n\n        <Form.Item\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n        >\n          <Input.Password prefix={<LockOutlined className=\"login-icon\" />} />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            style={{\n              width: \"100%\",\n            }}\n          >\n            Login\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  )\n}\n\nexport default LoginForm\n","import React from \"react\"\nimport echarts from \"echarts\"\nimport \"echarts-gl\"\nimport world from \"../assets/mapData/world.json\"\necharts.registerMap(\"world\", world)\n\nclass LoginBackground extends React.Component {\n  constructor(props) {\n    super(props)\n    this.chart = null\n  }\n  componentDidMount() {\n    this.chart = echarts.init(this.refs.chart)\n    window.addEventListener(\"resize\", this.resize.bind(this))\n    this.initChart()\n  }\n\n  resize() {\n    this.chart && this.chart.resize()\n  }\n\n  componentWillUnmount() {\n    this.chart.dispose()\n    window.removeEventListener(\"resize\", this.resize)\n  }\n\n  initChart() {\n    const canvas = document.createElement(\"canvas\")\n    const mapChart = echarts.init(canvas, null, {\n      width: 2048,\n      height: 1024,\n    })\n    const mapOption = {\n      geo: {\n        map: \"world\",\n        label: {\n          fontSize: 40,\n        },\n        itemStyle: {\n          areaColor: \"transparent\",\n          borderColor: \"#00FDFF\",\n        },\n        emphasis: {\n          label: {\n            color: \"#ffffff\",\n          },\n          itemStyle: {\n            areaColor: \"#e33e33\",\n          },\n        },\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        boundingCoords: [\n          [-180, 90],\n          [180, -90],\n        ],\n      },\n    }\n    mapChart.setOption(mapOption)\n    const option = {\n      globe: {\n        globeRadius: 80,\n        baseTexture: require(\"../assets/images/earth.jpg\"),\n        heightTexture: require(\"../assets/images/earth-high.jpg\"),\n        environment: require(\"../assets/images/universe.jpg\"),\n        displacementScale: 0.1,\n        shading: \"lambert\",\n        light: {\n          ambient: {\n            color: \"#fff\",\n            intensity: 0.6,\n          },\n          main: {\n            intensity: 0.6,\n            shadow: true,\n          },\n        },\n        layers: [\n          {\n            type: \"blend\",\n            texture: mapChart,\n          },\n        ],\n      },\n      series: [],\n    }\n    this.chart.setOption(option)\n  }\n\n  render() {\n    return <div className=\"login-background\" ref=\"chart\"></div>\n  }\n}\n\nexport default LoginBackground\n","import React from \"react\"\nimport LoginForm from \"./LoginForm\"\nimport LoginBackground from \"./LoginBackground\"\nimport \"./layout.less\"\n\nexport const LayoutContext = React.createContext()\n\nconst LoginLayout = () => {\n  window.location.hash = \"/login\"\n  return (\n    <div className=\"login-layout\">\n      <LoginBackground />\n      <LoginForm />\n    </div>\n  )\n}\n\nexport default LoginLayout\n","import { HomeOutlined, CodepenOutlined } from \"@ant-design/icons\"\nexport default [\n  {\n    name: \"Home\",\n    key: \"/\",\n    icon: HomeOutlined,\n  },\n  {\n    name: \"Three Start\",\n    key: \"/three\",\n    icon: CodepenOutlined,\n    subMenu: [\n      {\n        name: \"Geometry\",\n        key: \"/three/start/introduce\",\n      },\n      {\n        name: \"Simple Earth\",\n        key: \"/three/start/simpleEarth\",\n      },\n      {\n        name: \"Three Star\",\n        key: \"/three/start/threeStar\",\n      },\n    ],\n  },\n  // {\n  //   name: \"Echarts\",\n  //   key: \"/echarts\",\n  //   icon: SettingFilled,\n  //   subMenu: [\n  //     {\n  //       name: \"Earth\",\n  //       key: \"/echarts/earth\",\n  //     },\n  //   ],\n  // },\n]\n","import React from \"react\"\nimport { Menu } from \"antd\"\nimport { useHistory } from \"react-router-dom\"\nimport menuTree from \"./menuTree\"\n\nconst transferTree = (menu) => {\n  if (!menu.subMenu) {\n    return (\n      <Menu.Item key={menu.key}>\n        {menu.icon && React.createElement(menu.icon)}\n        <span>{menu.name}</span>\n      </Menu.Item>\n    )\n  } else {\n    const subMenuTitle = (\n      <span>\n        {menu.icon && React.createElement(menu.icon)}\n        <span>{menu.name}</span>\n      </span>\n    )\n    const subMenuArr = []\n    menu.subMenu.forEach((childMenu) => {\n      subMenuArr.push(transferTree(childMenu))\n    })\n    return (\n      <Menu.SubMenu key={menu?.key} title={subMenuTitle}>\n        {subMenuArr}\n      </Menu.SubMenu>\n    )\n  }\n}\n\nconst PrimaryMenu = () => {\n  const history = useHistory()\n  const Menus = menuTree.map((menu) => transferTree(menu))\n\n  const changeRouter = (param) => {\n    param.key && history.push(param.key)\n  }\n\n  return (\n    <Menu\n      onClick={changeRouter}\n      theme=\"dark\"\n      mode=\"inline\"\n      defaultSelectedKeys={[\"/\"]}\n    >\n      {Menus}\n    </Menu>\n  )\n}\n\nexport default PrimaryMenu\n","import React, { useContext, useMemo } from \"react\"\nimport { Breadcrumb, Dropdown, Menu } from \"antd\"\nimport { useLocation } from \"react-router\"\nimport { useHistory } from \"react-router-dom\"\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\"\nimport { LayoutContext } from \"./PrimaryLayout\"\nimport menuTree from \"./menuTree\"\n\nconst assembleTree = (menus, parent) => {\n  for (let i = 0; i < menus.length; i++) {\n    let menu = menus[i]\n    let subMenus = menu.subMenu,\n      path = parent ? parent + \"-\" + menu.name : menu.name\n    menu.path = path\n    subMenus && assembleTree(subMenus, path)\n  }\n}\n\nconst getMenuByPath = (menus, path) => {\n  for (let i = 0; i < menus.length; i++) {\n    let menu = menus[i]\n    if (menu.key === path) {\n      return menu\n    }\n    let subMenus = menu.subMenu\n    if (subMenus && (menu = getMenuByPath(subMenus, path))) {\n      return menu\n    }\n  }\n}\n\nassembleTree(menuTree, null)\n\nconst PrimaryLayout = () => {\n  const layoutContext = useContext(LayoutContext)\n  const location = useLocation()\n  const history = useHistory()\n  const breadRoute = useMemo(() => {\n    const targetMenu = getMenuByPath(menuTree, location.pathname)\n    return targetMenu?.path ? targetMenu.path.split(\"-\") : []\n  }, [location.pathname])\n  const userMenu = (\n    <Menu\n      onClick={() => {\n        localStorage.removeItem(\"LOGIN\")\n        history.push(\"/login\")\n      }}\n    >\n      <Menu.Item>logout</Menu.Item>\n    </Menu>\n  )\n  return (\n    <div className=\"primary-header\">\n      {React.createElement(\n        layoutContext.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n        {\n          className: \"trigger\",\n          onClick: () => {\n            layoutContext.toggleCollapse(!layoutContext.collapsed)\n          },\n        }\n      )}\n      <Breadcrumb>\n        {breadRoute.map((name, index) => {\n          return <Breadcrumb.Item key={index}>{name}</Breadcrumb.Item>\n        })}\n      </Breadcrumb>\n      <Dropdown overlay={userMenu}>\n        <div className=\"user-info\"></div>\n      </Dropdown>\n    </div>\n  )\n}\n\nexport default PrimaryLayout\n","import React from \"react\"\nfunction Earth() {\n  return <div>earth</div>\n}\n\nexport default Earth\n","import Earth from \"./Earth\"\nexport default {\n  name: \"echarts\",\n  routes: [\n    {\n      name: \"echarts\",\n      path: \"/echarts/earth\",\n      component: Earth,\n    },\n  ],\n}\n","export default (delay) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve()\n    }, delay)\n  })\n}\n","import React from \"react\"\nimport * as THREE from \"three\"\nimport * as OrbitControls from \"three-orbitcontrols\"\nimport delay from \"../../../utils/delay\"\n// const THREE = require(\"three\")\n// const OrbitControls = require(\"three-orbitcontrols\")\n// 两种引入方式都可以\n\nclass Introduce extends React.Component {\n  constructor(props) {\n    super(props)\n    this.scene = null\n    this.renderer = null\n    this.camera = null\n\n    this.cubeMesh = null\n    this.sphereMesh = null\n    this.cylindeMesh = null\n\n    this.T0 = 0\n    this.T1 = 0\n  }\n\n  componentDidMount() {\n    this.init()\n    // setInterval(() => {\n    //   this.renderGL()\n    // }, 20)\n  }\n\n  async init() {\n    this.scene = new THREE.Scene()\n    this.initMesh()\n\n    //辅助坐标系\n    let axisHelper = new THREE.AxisHelper(250)\n    this.scene.add(axisHelper)\n\n    //点光源\n    let point = new THREE.PointLight(0xffffff)\n    point.position.set(400, 200, 300) //点光源位置\n    this.scene.add(point) //点光源添加到场景中\n    //环境光\n    let ambient = new THREE.AmbientLight(0x444444)\n    this.scene.add(ambient)\n\n    await delay(10)\n    let width = this.refs.three.clientWidth //window.innerWidth //窗口宽度\n    let height = this.refs.three.clientHeight //window.innerHeight //窗口高度\n    let k = width / height //窗口宽高比\n    let s = 200 //三维场景显示范围控制系数，系数越大，显示的范围越大\n    //创建相机 CAMERA\n    this.camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 1000)\n    this.camera.position.set(200, 100, 100) //设置相机位置\n    this.camera.lookAt(this.scene.position) //设置相机方向(指向的场景对象)\n    // RENDERER\n    this.renderer = new THREE.WebGLRenderer()\n    this.renderer.setSize(width, height) //设置渲染区域尺寸\n    this.renderer.setClearColor(0x00000, 1) //设置背景颜色\n    this.refs.three.appendChild(this.renderer.domElement) //body元素中插入canvas对象\n    //执行渲染操作   指定场景、相机作为参数\n    this.T0 = new Date()\n    this.renderGL()\n    new OrbitControls(this.camera, this.renderer.domElement)\n\n    // let controls = new OrbitControls(this.camera, this.renderer.domElement)\n    // controls.addEventListener(\"change\", this.renderGL.bind(this))\n  }\n\n  initMesh() {\n    let sphereGeo = new THREE.SphereGeometry(50, 10, 10) //创建一个球体几何对象\n    let cubeGeo = new THREE.BoxGeometry(200, 100, 50) //创建一个立方体几何对象Geometry\n    let cylindeGeo = new THREE.CylinderGeometry(50, 30, 90, 100, 100)\n    let materialLambert = new THREE.MeshLambertMaterial({\n      color: 0x0000ff,\n      opacity: 0.7,\n      transparent: true,\n    })\n    let materialBasic = new THREE.MeshBasicMaterial({\n      color: 0xffff00,\n      wireframe: true,\n    })\n    let materialPhong = new THREE.MeshPhongMaterial({\n      color: 0x0000ff,\n      specular: 0x4488ee,\n      shininess: 12,\n    })\n    this.cubeMesh = new THREE.Mesh(cubeGeo, materialLambert)\n    this.sphereMesh = new THREE.Mesh(sphereGeo, materialBasic)\n    this.cylindeMesh = new THREE.Mesh(cylindeGeo, materialPhong)\n    this.cubeMesh.position.set(0, 0, 0)\n    this.sphereMesh.position.set(0, 100, 0) //几何体中心位置\n    this.cylindeMesh.position.set(200, 0, 0)\n    this.scene.add(this.cubeMesh)\n    this.scene.add(this.sphereMesh)\n    this.scene.add(this.cylindeMesh)\n  }\n\n  renderGL() {\n    // 保证每次执行时间内转动的角度是一样的\n    this.T1 = new Date()\n    let t = this.T1 - this.T0\n    this.T0 = this.T1\n    //console.log(t) // t = 16.7ms 16~17\n    this.renderer.render(this.scene, this.camera) //执行渲染操作\n    this.cubeMesh.rotateY(0.001 * t) //每次绕y轴旋转0.01弧度 一周2PI 6.28 每秒转0.5\n    this.sphereMesh.rotateY(0.002 * t)\n    requestAnimationFrame(this.renderGL.bind(this))\n  }\n\n  render() {\n    return (\n      <div\n        ref=\"three\"\n        id=\"three\"\n        style={{ width: \"100%\", height: \"100%\" }}\n      ></div>\n    )\n  }\n}\n\nexport default Introduce\n","import React from \"react\"\nimport * as THREE from \"three\"\nimport * as OrbitControls from \"three-orbitcontrols\"\nimport delay from \"../../../utils/delay\"\nimport { Vector3 } from \"three\"\n// const THREE = require(\"three\")\n// const OrbitControls = require(\"three-orbitcontrols\")\n// 两种引入方式都可以\nconst earthImg = require(\"../../../assets/images/earth.jpg\")\n\nclass Introduce extends React.Component {\n  constructor(props) {\n    super(props)\n    this.scene = null\n    this.renderer = null\n    this.camera = null\n\n    this.cubeMesh = null\n    this.sphereMesh = null\n    this.cylindeMesh = null\n\n    this.T0 = 0\n    this.T1 = 0\n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  async init() {\n    this.scene = new THREE.Scene()\n    this.initMesh()\n\n    //辅助坐标系\n    let axisHelper = new THREE.AxisHelper(250)\n    this.scene.add(axisHelper)\n\n    //点光源\n    let point = new THREE.PointLight(0xffffff)\n    point.position.set(400, 0, 0) //点光源位置\n    this.scene.add(point) //点光源添加到场景中\n    //环境光\n    let ambient = new THREE.AmbientLight(0xffffff)\n    this.scene.add(ambient)\n\n    await delay(10)\n    let width = this.refs.three.clientWidth //window.innerWidth //窗口宽度\n    let height = this.refs.three.clientHeight //window.innerHeight //窗口高度\n    let k = width / height //窗口宽高比\n    let s = 200 //三维场景显示范围控制系数，系数越大，显示的范围越大\n    //创建相机 CAMERA\n    this.camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 1000)\n    this.camera.position.set(200, 100, 100) //设置相机位置\n    this.camera.lookAt(this.scene.position) //设置相机方向(指向的场景对象)\n    // RENDERER\n    this.renderer = new THREE.WebGLRenderer()\n    this.renderer.setSize(width, height) //设置渲染区域尺寸\n    this.renderer.setClearColor(0x00000, 1) //设置背景颜色\n    this.refs.three.appendChild(this.renderer.domElement) //body元素中插入canvas对象\n    //执行渲染操作   指定场景、相机作为参数\n    this.T0 = new Date()\n    this.renderGL()\n    new OrbitControls(this.camera, this.renderer.domElement)\n\n    // let controls = new OrbitControls(this.camera, this.renderer.domElement)\n    // controls.addEventListener(\"change\", this.renderGL.bind(this))\n  }\n\n  async initMesh() {\n    let sphereGeo = new THREE.SphereGeometry(100, 40, 40) //创建一个球体几何对象\n    let ImageLoader = new THREE.ImageLoader()\n    let img = await ImageLoader.load(earthImg)\n    let texture = new THREE.Texture(img)\n    texture.needsUpdate = true\n    let materialBasic = new THREE.MeshPhongMaterial({\n      //color: 0xffff00,\n      //wireframe: true,\n      map: texture,\n    })\n    this.sphereMesh = new THREE.Mesh(sphereGeo, materialBasic)\n    this.sphereMesh.position.set(0, 0, 0) //几何体中心位置\n    this.scene.add(this.sphereMesh)\n\n    //line\n    // let geo = new THREE.Geometry()\n    // let arc = new THREE.ArcCurve(0, 0, 10, 0, 2 * Math.PI)\n    // let points = arc.getPoints(50)\n    // geo.setFromPoints(points)\n    // let material = new THREE.LineBasicMaterial({\n    //   color: 0xff0000,\n    // })\n    // this.line = new THREE.Line(geo, material)\n    // let V1 = new Vector3(0, 2, 0)\n    // this.line.position.set(100, 0, 0)\n    // this.line.rotateOnAxis(V1, Math.PI / 2)\n    // this.scene.add(this.line)\n\n    // 点模型\n    let geometry2 = new THREE.Geometry()\n    let o = new THREE.Vector3(0, 0, 0)\n    let p1 = new THREE.Vector3(102, 0, 0)\n    let p2 = new THREE.Vector3(0, 102, 0)\n    let cp = new THREE.Vector3().addVectors(p1, p2).divideScalar(2)\n    let l = p1.distanceTo(p2)\n    let L = cp.distanceTo(o)\n    let K = cp.multiplyScalar((l + L) / L)\n\n    geometry2.vertices.push(p1, p2, K)\n    let material2 = new THREE.PointsMaterial({\n      color: 0xff0000,\n      size: 10,\n    })\n    //点模型对象\n    let points = new THREE.Points(geometry2, material2)\n    this.scene.add(points) //点模型对象添加到场景中\n\n    //贝塞尔曲线\n    let geometry = new THREE.Geometry()\n    let curve = new THREE.QuadraticBezierCurve3(p1, K, p2)\n    let points1 = curve.getPoints(100) //分段数100，返回101个顶点\n    geometry.setFromPoints(points1)\n    //材质对象\n    let material = new THREE.LineBasicMaterial({\n      color: 0xff0000,\n    })\n    let line = new THREE.Line(geometry, material)\n    this.scene.add(line) //线条对象添加到场景中\n  }\n\n  renderGL() {\n    // 保证每次执行时间内转动的角度是一样的\n    this.T1 = new Date()\n    let t = this.T1 - this.T0\n    this.T0 = this.T1\n    this.renderer.render(this.scene, this.camera) //执行渲染操作\n    this.sphereMesh.rotateY(0.001 * t)\n    //this.line.rotateY(0.001 * t)\n    requestAnimationFrame(this.renderGL.bind(this))\n  }\n\n  render() {\n    return (\n      <div\n        ref=\"three\"\n        id=\"three\"\n        style={{ width: \"100%\", height: \"100%\" }}\n      ></div>\n    )\n  }\n}\n\nexport default Introduce\n","import React from \"react\"\nimport delay from \"../../../utils/delay\"\n// import { vertexShader, fragmentShader } from \"../shader\"\nconst THREE = require(\"three\")\nconst OrbitControls = require(\"three-orbitcontrols\")\n\nconst SPHERES = [\n  {\n    name: \"Sun\",\n    img: require(\"../../../assets/images/sun.jpg\"),\n    raduis: 100,\n    position: [0, 0, 0],\n    cita: 0,\n  },\n  {\n    name: \"Earth\",\n    img: require(\"../../../assets/images/earth.jpg\"),\n    raduis: 50,\n    position: [650, 0, 0],\n    cita: 0,\n    T: 30,\n    R: 650,\n  },\n  {\n    name: \"Moon\",\n    img: require(\"../../../assets/images/moon.jpg\"),\n    raduis: 30,\n    position: [800, 0, 0],\n    cita: 0,\n    T: 5,\n    R: 150,\n  },\n]\n\nclass Introduce extends React.Component {\n  constructor(props) {\n    super(props)\n    this.scene = null\n    this.renderer = null\n    this.camera = null\n    this.clock = null\n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  componentWillUnmount() {\n    //释放内存\n    for (let i = this.scene.children.length - 1; i >= 0; i--) {\n      this.scene.remove(this.scene.children[i])\n    }\n    window.cancelAnimationFrame(this.requestAnimationFrame)\n  }\n\n  async init() {\n    this.scene = new THREE.Scene()\n    this.initBackground()\n\n    //辅助坐标系\n    // let axisHelper = new THREE.AxisHelper(250)\n    // this.scene.add(axisHelper)\n\n    this.initMesh()\n    //this.initAnimation()\n    this.initLight()\n    await delay(10) //正确获取元素高度宽度\n    this.initCameraAndRenderer()\n    //执行渲染操作   指定场景、相机作为参数\n    this.clock = new THREE.Clock()\n    this.renderGL()\n    new OrbitControls(this.camera, this.renderer.domElement)\n    window.addEventListener(\"click\", this.onClick.bind(this))\n\n    window.onresize = function () {\n      let width = this.refs.three.clientWidth\n      let height = this.refs.three.clientHeight\n      let k = width / height\n      let s = 300\n      this.renderer.setSize(width, height)\n      this.camera.left = -s * k\n      this.camera.right = s * k\n      this.camera.top = s\n      this.camera.bottom = -s\n      this.camera.updateProjectionMatrix()\n    }.bind(this)\n  }\n\n  initBackground() {\n    let geom = new THREE.Geometry()\n    let material = new THREE.ParticleBasicMaterial({\n      size: 0.01,\n      vertexColors: true,\n    })\n    let n = 1200\n    for (let i = 0; i < 3000; i++) {\n      let particle = new THREE.Vector3(\n        (Math.random() - 0.5) * n,\n        (Math.random() - 0.5) * n,\n        (Math.random() - 0.5) * n\n      )\n      geom.vertices.push(particle)\n      let color_k = Math.random()\n      geom.colors.push(new THREE.Color(color_k, color_k, color_k * 0.6))\n    }\n\n    let cloud = new THREE.ParticleSystem(geom, material)\n    this.scene.add(cloud)\n  }\n\n  async initMesh() {\n    SPHERES.forEach((item) => {\n      this.createSphere(item)\n    })\n  }\n\n  async createSphere(data) {\n    let sphereGeo = new THREE.SphereGeometry(data.raduis, 50, 50) //创建一个球体几何对象\n    let ImageLoader = new THREE.ImageLoader()\n    let img = await ImageLoader.load(data.img)\n    let texture = new THREE.Texture(img)\n    texture.needsUpdate = true\n    let materialBasic = new THREE.MeshPhongMaterial({\n      map: texture,\n      side: THREE.DoubleSide,\n    })\n    let sphereMesh = new THREE.Mesh(sphereGeo, materialBasic)\n    sphereMesh.position.set(...data.position) //几何体中心位置\n    sphereMesh.name = data.name\n    data.mesh = sphereMesh\n    this.scene.add(sphereMesh)\n  }\n\n  // initAnimation() {\n  //   let posTrack = new THREE.KeyframeTrack(\n  //     \".scale\",\n  //     [0, 4],\n  //     [0.01, 0.01, 0.01, 1, 1, 1]\n  //   )\n  //   let clip = new THREE.AnimationClip(\"default\", 4, [posTrack])\n  //   this.mixer = new THREE.AnimationMixer()\n  //   let AnimationAction = this.mixer.clipAction(clip, this.sun)\n  //   AnimationAction.loop = THREE.LoopOnce\n  //   AnimationAction.clampWhenFinished = true\n  //   AnimationAction.play()\n  // }\n\n  initLight() {\n    let directionalLight = new THREE.DirectionalLight(16777215, 0.9)\n    directionalLight.position.set(400, 200, 300)\n    this.scene.add(directionalLight)\n    let directionalLight2 = new THREE.DirectionalLight(16777215, 0.9)\n    directionalLight2.position.set(-400, -200, -300)\n    this.scene.add(directionalLight2)\n    let ambient = new THREE.AmbientLight(16777215, 0.6)\n    this.scene.add(ambient)\n  }\n\n  initCameraAndRenderer() {\n    let width = this.refs.three.clientWidth //window.innerWidth //窗口宽度\n    let height = this.refs.three.clientHeight //window.innerHeight //窗口高度\n    let k = width / height //窗口宽高比\n    let s = 300 //三维场景显示范围控制系数，系数越大，显示的范围越大\n    //创建相机 CAMERA\n    this.camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 2000) //正交\n    //this.camera = new THREE.PerspectiveCamera(90, width / height, 1, 2000) //透视摄像机\n    this.camera.position.set(0, 400, 1000) //设置相机位置\n    this.camera.lookAt(this.scene.position) //设置相机方向(指向的场景对象)\n    // RENDERER\n    this.renderer = new THREE.WebGLRenderer({ antialias: true })\n    this.renderer.setSize(width, height) //设置渲染区域尺寸\n    this.renderer.setClearColor(0x000000, 1) //设置背景颜色\n    this.refs.three.appendChild(this.renderer.domElement) //body元素中插入canvas对象\n  }\n\n  renderGL() {\n    let delta = this.clock.getDelta()\n    //自转\n    SPHERES.forEach((s) => {\n      s.mesh.rotation.y += delta\n    })\n    //公转\n    let earth = SPHERES[1]\n    earth.cita += (delta * 2 * Math.PI) / earth.T\n    earth.mesh.position.set(\n      earth.R * Math.cos(earth.cita),\n      0,\n      earth.R * Math.sin(earth.cita)\n    )\n\n    let moon = SPHERES[2]\n    moon.cita += (delta * 2 * Math.PI) / moon.T\n    moon.mesh.position.set(\n      moon.R * Math.cos(moon.cita) + earth.R * Math.cos(earth.cita),\n      0,\n      moon.R * Math.sin(moon.cita) + earth.R * Math.sin(earth.cita)\n    )\n\n    this.camera.lookAt(earth.mesh.position)\n    //console.log(delta) //0.016 ~0.017\n    // this.uniforms.time.value += delta\n    // this.sun.rotation.y -= 0.005\n    // this.mixer.update(delta)\n    this.renderer.render(this.scene, this.camera)\n    this.requestAnimationFrame = requestAnimationFrame(this.renderGL.bind(this))\n  }\n\n  //射线来决定第一个点中的物体\n  onClick(e) {\n    let offsetTop = this.refs.three.offsetTop\n    let offsetLeft = this.refs.three.offsetLeft\n    let width = this.refs.three.clientWidth\n    let height = this.refs.three.clientHeight\n    var Sx = e.clientX - offsetLeft\n    var Sy = e.clientY - offsetTop\n    let x = (Sx / width) * 2 - 1\n    let y = -(Sy / height) * 2 + 1\n    let raycaster = new THREE.Raycaster()\n    raycaster.setFromCamera(new THREE.Vector2(x, y), this.camera)\n    let intersectsArr = SPHERES.map((item) => item.mesh)\n    var intersects = raycaster.intersectObjects(intersectsArr, false)\n    if (intersects.length > 0) {\n      console.log(intersects[0].object.name)\n    }\n  }\n\n  render() {\n    return (\n      <div\n        ref=\"three\"\n        id=\"three\"\n        style={{ width: \"100%\", height: \"100%\" }}\n      ></div>\n    )\n  }\n}\n\nexport default Introduce\n","import Introduce from \"./start/Introduce\"\nimport SimpleEarth from \"./start/SimpleEarth\"\nimport ThreeStar from \"./start/ThreeStar\"\nexport default {\n  name: \"three\",\n  routes: [\n    {\n      name: \"three\",\n      path: \"/three/start/introduce\",\n      component: Introduce,\n    },\n    {\n      name: \"three\",\n      path: \"/three/start/simpleEarth\",\n      component: SimpleEarth,\n    },\n    {\n      name: \"three\",\n      path: \"/three/start/threeStar\",\n      component: ThreeStar,\n    },\n  ],\n}\n","import React, { useLayoutEffect } from \"react\"\nimport * as d3 from \"d3\"\nimport \"./home.less\"\n\nfunction Home() {\n  useLayoutEffect(() => {\n    let i = 0\n    let svg = d3\n      .select(\"#home\")\n      .append(\"svg\")\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", \"100%\")\n    svg\n      .append(\"rect\")\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", \"100%\")\n      .attr(\"fill\", \"#222222\")\n      .on(\"ontouchstart\" in document ? \"touchmove\" : \"mousemove\", particle)\n    function particle() {\n      let m = d3.mouse(this)\n      svg\n        .insert(\"circle\", \"rect\")\n        .attr(\"cx\", m[0])\n        .attr(\"cy\", m[1])\n        .attr(\"r\", 1e-6)\n        .style(\"stroke\", d3.hsl((i = (i + 1) % 360), 1, 0.5))\n        .style(\"stroke-opacity\", 1)\n        .transition()\n        .duration(2000)\n        .ease(Math.sqrt)\n        .attr(\"r\", 100)\n        .style(\"stroke-opacity\", 1e-6)\n        .remove()\n      d3.event.preventDefault()\n    }\n  }, [])\n  return <div id=\"home\" style={{ width: \"100%\", height: \"100%\" }}></div>\n}\n\nexport default Home\n","import echarts from \"./echarts\"\nimport three from \"./three\"\nimport home from \"./home\"\n\nexport default [echarts, three, home]\n","import Home from \"./Home\"\nexport default {\n  name: \"Home\",\n  routes: [\n    {\n      name: \"home\",\n      path: \"/\",\n      component: Home,\n    },\n  ],\n}\n","import React, { Fragment } from \"react\"\nimport { Route as ReactRoute, Switch } from \"react-router-dom\"\nimport modules from \"../modules\"\n\nconst getAllRoutes = (mods) => {\n  const _allRoutes = []\n  mods.forEach((mod) => {\n    _allRoutes.push(...mod.routes)\n  })\n  return _allRoutes\n}\n\nconst PrimaryContent = () => {\n  const allRoutes = getAllRoutes(modules)\n  return (\n    <Switch>\n      <Fragment>\n        {allRoutes.map((route) => {\n          let PageComponent = route.component\n          return (\n            <ReactRoute\n              exact\n              key={route.path}\n              path={route.path}\n              render={(routeprops) => <PageComponent {...routeprops} />}\n            />\n          )\n        })}\n      </Fragment>\n    </Switch>\n  )\n}\n\nexport default PrimaryContent\n","import React, { useState } from \"react\"\nimport { Layout } from \"antd\"\nimport { useHistory } from \"react-router-dom\"\nimport LoginLayout from \"./LoginLayout\"\nimport PrimaryMenu from \"./PrimaryMenu\"\nimport PrimaryHeader from \"./PrimaryHeader\"\nimport PrimaryContent from \"./PrimaryContent\"\nimport \"./layout.less\"\n\nconst { Sider } = Layout\n\nexport const LayoutContext = React.createContext()\n\nconst PrimaryLayout = () => {\n  const [collapsed, setCollapsed] = useState(false)\n  const toggleCollapse = () => {\n    setCollapsed(!collapsed)\n  }\n  const history = useHistory()\n\n  window.onhashchange = () => {\n    if (history.location.pathname === \"/login\") {\n      history.push(\"/\")\n    }\n  }\n  if (!localStorage.getItem(\"LOGIN\")) {\n    return <LoginLayout />\n  }\n  return (\n    <LayoutContext.Provider value={{ collapsed, toggleCollapse }}>\n      <Layout className=\"primary-layout\">\n        <Sider\n          className=\"primary-sider\"\n          trigger={null}\n          collapsible\n          collapsed={collapsed}\n        >\n          <PrimaryMenu />\n        </Sider>\n        <Layout>\n          <PrimaryHeader />\n          <div className=\"primary-content\">\n            <PrimaryContent />\n          </div>\n        </Layout>\n      </Layout>\n    </LayoutContext.Provider>\n  )\n}\n\nexport default PrimaryLayout\n","import React from \"react\"\nimport { HashRouter } from \"react-router-dom\"\nimport { ConfigProvider } from \"antd\"\nimport zhCN from \"antd/es/locale/zh_CN\"\nimport PrimaryLayout from \"./layout/PrimaryLayout\"\n\nconst App = () => {\n  return (\n    <ConfigProvider locale={zhCN}>\n      <HashRouter basename=\"/\">\n        <PrimaryLayout></PrimaryLayout>\n      </HashRouter>\n    </ConfigProvider>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./reset.less\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}