{"version":3,"sources":["assets/images/earth.jpg","assets/images/uv-ge.jpg","assets/images/uv-chen.jpg","assets/images/uv-ai.jpg","assets/images/uv-gao.jpg","assets/images/uv-feng.jpg","assets/images/uv-niu.jpg","assets/images/earth-high.jpg","assets/images/universe.jpg","assets/images/sun.jpg","assets/images/moon.jpg","layout/LoginForm.jsx","layout/LoginBackground.jsx","layout/LoginLayout.jsx","layout/menuTree.js","layout/PrimaryMenu.jsx","layout/PrimaryHeader.jsx","modules/echarts/index.js","modules/echarts/LiquidFill.jsx","utils/delay.js","modules/three/start/Introduce.jsx","modules/three/start/SimpleEarth.jsx","modules/three/start/ThreeStar.jsx","modules/three/start/UVMapping.jsx","modules/three/start/MagicCube.jsx","modules/three/index.js","modules/home/Home.jsx","modules/home/index.js","modules/index.js","modules/game/Snake.jsx","modules/game/index.js","layout/PrimaryContent.jsx","layout/PrimaryLayout.jsx","App.js","index.js"],"names":["module","exports","LoginForm","history","useHistory","useLayoutEffect","document","getElementById","setAttribute","className","name","initialValues","remember","onFinish","params","username","password","localStorage","setItem","push","Item","rules","required","message","prefix","UserOutlined","Password","LockOutlined","type","htmlType","style","width","echarts","registerMap","world","LoginBackground","props","chart","this","init","refs","window","onresize","resize","bind","initChart","dispose","canvas","createElement","mapChart","height","setOption","geo","map","label","fontSize","itemStyle","areaColor","borderColor","emphasis","color","top","left","right","bottom","boundingCoords","series","coordinateSystem","zlevel","rippleEffect","period","brushType","scale","symbol","symbolSize","normal","show","data","_data","i","getRandomData","option","globe","globeRadius","baseTexture","require","heightTexture","environment","displacementScale","shading","light","ambient","intensity","main","shadow","layers","texture","effect","trailWidth","trailLength","trailOpacity","trailColor","blendMode","lineStyle","opacity","silent","coords","Math","random","value","toFixed","ref","React","Component","LoginLayout","createContext","location","hash","key","icon","HomeOutlined","CodepenOutlined","subMenu","DeploymentUnitOutlined","PieChartOutlined","PrimaryMenu","Menus","menuTree","menu","transferTree","subMenuTitle","subMenuArr","forEach","childMenu","SubMenu","title","onClick","param","theme","mode","defaultSelectedKeys","assembleTree","menus","parent","length","subMenus","path","PrimaryLayout","layoutContext","useContext","LayoutContext","useLocation","breadRoute","useMemo","targetMenu","getMenuByPath","pathname","split","userMenu","removeItem","collapsed","MenuUnfoldOutlined","MenuFoldOutlined","toggleCollapse","index","overlay","routes","component","backgroundColor","radius","center","backgroundStyle","borderWidth","outline","borderType","shadowBlur","shadowColor","x","y","x2","y2","colorStops","offset","globalCoord","textStyle","delay","Promise","resolve","setTimeout","Introduce","scene","renderer","camera","cubeMesh","sphereMesh","cylindeMesh","T0","T1","THREE","initMesh","axisHelper","add","point","position","set","three","clientWidth","clientHeight","k","s","lookAt","setSize","setClearColor","appendChild","domElement","Date","renderGL","OrbitControls","sphereGeo","cubeGeo","cylindeGeo","materialLambert","transparent","materialBasic","wireframe","materialPhong","specular","shininess","t","render","rotateY","requestAnimationFrame","id","earthImg","ImageLoader","load","img","needsUpdate","geometry2","o","p1","p2","cp","addVectors","divideScalar","l","distanceTo","L","K","multiplyScalar","vertices","material2","size","points","geometry","curve","points1","getPoints","setFromPoints","material","line","SPHERES","raduis","cita","T","R","clock","children","remove","cancelAnimationFrame","removeEventListener","Scene","initBackground","initLight","initCameraAndRenderer","Clock","addEventListener","updateProjectionMatrix","geom","Geometry","ParticleBasicMaterial","vertexColors","n","particle","Vector3","color_k","colors","Color","cloud","ParticleSystem","item","createSphere","SphereGeometry","Texture","MeshPhongMaterial","side","DoubleSide","Mesh","mesh","directionalLight","DirectionalLight","directionalLight2","AmbientLight","OrthographicCamera","WebGLRenderer","antialias","delta","getDelta","rotation","earth","PI","cos","sin","moon","e","offsetTop","offsetLeft","Sx","clientX","Sy","clientY","raycaster","Raycaster","setFromCamera","Vector2","intersectsArr","intersects","intersectObjects","console","log","object","IMG_ARRAY","meshFaceMaterial","loadTexture","newCubeMesh","clone","POSITION","SimpleEarth","ThreeStar","UVMapping","beginRotate","axis","target","random3","group","cubes","abs","angle","_x","_y","_z","z","rotateX","rotateZ","number","Home","svg","d3","append","attr","on","m","insert","transition","duration","ease","sqrt","preventDefault","home","countRef","useRef","snakeRef","directionRef","targetRef","timeRef","intervalRef","useState","score","setScore","pause","setPause","end","setEnd","endMsg","setEndMsg","mapData","setMapData","exit","useCallback","p","_exit","current","createOneTarget","food","valid","ceil","createNewHead","_head","_newHead","move","_snake","JSON","parse","stringify","_tail","clearInterval","unshift","join","prevScore","pop","_mapData","keydownEvent","keyCode","setInterval","initMap","_row","j","useEffect","row","cell","PrimaryContent","allRoutes","mods","_allRoutes","mod","getAllRoutes","modules","route","PageComponent","exact","routeprops","Sider","setCollapsed","onhashchange","getItem","Provider","trigger","collapsible","PrimaryHeader","App","locale","zhCN","basename","ReactDOM"],"mappings":"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","file":"static/js/main.b6e79d9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/earth.c2a74405.jpg\";","module.exports = __webpack_public_path__ + \"static/media/uv-ge.835cb1e0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/uv-chen.67e1f77b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/uv-ai.c2ac9b31.jpg\";","module.exports = __webpack_public_path__ + \"static/media/uv-gao.55959f6e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/uv-feng.7794d2d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/uv-niu.c7bebae2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/earth-high.6102414f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/universe.aeaf4baf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sun.00b3bfb2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/moon.81ed99c8.jpg\";","import React, { useLayoutEffect } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\"\nimport { useHistory } from \"react-router-dom\"\nconst LoginForm = () => {\n  const history = useHistory()\n  const onFinish = (params) => {\n    if (params.username === \"admin\" && params.password === \"123\") {\n      localStorage.setItem(\"LOGIN\", \"1\")\n      history.push(\"/\")\n    }\n  }\n  useLayoutEffect(() => {\n    document\n      .getElementById(\"login-form_username\")\n      .setAttribute(\"autocomplete\", \"off\")\n  }, [])\n  return (\n    <div className=\"login-form\">\n      <div className=\"title\">React Visual Admin</div>\n      <Form\n        name=\"login-form\"\n        initialValues={{\n          remember: false,\n        }}\n        onFinish={onFinish}\n      >\n        <Form.Item\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your username!\",\n            },\n          ]}\n        >\n          <Input prefix={<UserOutlined className=\"login-icon\" />} />\n        </Form.Item>\n\n        <Form.Item\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n        >\n          <Input.Password prefix={<LockOutlined className=\"login-icon\" />} />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            style={{\n              width: \"100%\",\n            }}\n          >\n            Login\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  )\n}\n\nexport default LoginForm\n","import React from \"react\"\nimport echarts from \"echarts\"\nimport \"echarts-gl\"\nimport world from \"../assets/mapData/world.json\"\necharts.registerMap(\"world\", world)\n\nclass LoginBackground extends React.Component {\n  constructor(props) {\n    super(props)\n    this.chart = null\n  }\n  componentDidMount() {\n    this.chart = echarts.init(this.refs.chart)\n    window.onresize = this.resize.bind(this)\n    this.initChart()\n  }\n\n  resize() {\n    this.chart && this.chart.resize()\n  }\n\n  componentWillUnmount() {\n    this.chart.dispose()\n    window.onresize = null\n  }\n\n  initChart() {\n    const canvas = document.createElement(\"canvas\")\n    const mapChart = echarts.init(canvas, null, {\n      width: 2048,\n      height: 1024,\n    })\n    const mapOption = {\n      geo: {\n        map: \"world\",\n        label: {\n          fontSize: 40,\n        },\n        itemStyle: {\n          areaColor: \"transparent\",\n          borderColor: \"#00FDFF\",\n        },\n        emphasis: {\n          label: {\n            color: \"#ffffff\",\n          },\n          itemStyle: {\n            areaColor: \"#e33e33\",\n          },\n        },\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        boundingCoords: [\n          [-180, 90],\n          [180, -90],\n        ],\n      },\n      series: [\n        {\n          type: \"effectScatter\",\n          coordinateSystem: \"geo\",\n          zlevel: 2,\n          rippleEffect: {\n            //涟漪特效\n            period: 6, //动画时间，值越小速度越快\n            brushType: \"stroke\", //波纹绘制方式 stroke, fill\n            scale: 6, //波纹圆环最大限制，值越大波纹越大\n          },\n          symbol: \"circle\",\n          symbolSize: 10,\n          itemStyle: {\n            normal: {\n              show: false,\n              color: \"yellow\",\n            },\n          },\n          data: [[121.51585, 31.23045]], //也可以是 {name: 'aaa', value: [121,51585, 31.23045]}形式\n        },\n      ],\n    }\n    mapChart.setOption(mapOption)\n    let _data = []\n    for (let i = 0; i < 50; i++) {\n      _data.push(this.getRandomData())\n    }\n    const option = {\n      globe: {\n        globeRadius: 80,\n        baseTexture: require(\"../assets/images/earth.jpg\"),\n        heightTexture: require(\"../assets/images/earth-high.jpg\"),\n        environment: require(\"../assets/images/universe.jpg\"),\n        displacementScale: 0.1,\n        shading: \"lambert\",\n        light: {\n          ambient: {\n            color: \"#fff\",\n            intensity: 0.6,\n          },\n          main: {\n            intensity: 0.6,\n            shadow: true,\n          },\n        },\n        layers: [\n          {\n            type: \"blend\",\n            texture: mapChart,\n          },\n        ],\n      },\n      series: [\n        {\n          name: \"lines3D\",\n          type: \"lines3D\",\n          coordinateSystem: \"globe\",\n          effect: {\n            show: true,\n            period: 2,\n            trailWidth: 1,\n            trailLength: 0.5,\n            trailOpacity: 1,\n            trailColor: \"#0087f4\",\n          },\n          blendMode: \"lighter\",\n          lineStyle: {\n            width: 1,\n            color: \"#0087f4\",\n            opacity: 0,\n          },\n          data: _data,\n          silent: false,\n        },\n      ],\n    }\n    this.chart.setOption(option)\n  }\n\n  getRandomData() {\n    return {\n      coords: [\n        [Math.random() * 135.2, Math.random() * 53.33],\n        [121.51585, 31.23045],\n      ],\n      value: (Math.random() * 30).toFixed(2),\n    }\n  }\n\n  render() {\n    return <div className=\"login-background\" ref=\"chart\"></div>\n  }\n}\n\nexport default LoginBackground\n","import React from \"react\"\nimport LoginForm from \"./LoginForm\"\nimport LoginBackground from \"./LoginBackground\"\nimport \"./layout.less\"\n\nexport const LayoutContext = React.createContext()\n\nconst LoginLayout = () => {\n  window.location.hash = \"/login\"\n  return (\n    <div className=\"login-layout\">\n      <LoginBackground />\n      <LoginForm />\n    </div>\n  )\n}\n\nexport default LoginLayout\n","import {\r\n  HomeOutlined,\r\n  CodepenOutlined,\r\n  DeploymentUnitOutlined,\r\n  PieChartOutlined,\r\n} from \"@ant-design/icons\"\r\nexport default [\r\n  {\r\n    name: \"Home\",\r\n    key: \"/\",\r\n    icon: HomeOutlined,\r\n  },\r\n  {\r\n    name: \"Three Begin\",\r\n    key: \"/three\",\r\n    icon: CodepenOutlined,\r\n    subMenu: [\r\n      {\r\n        name: \"Geometry\",\r\n        key: \"/three/start/introduce\",\r\n      },\r\n      {\r\n        name: \"Simple Earth\",\r\n        key: \"/three/start/simpleEarth\",\r\n      },\r\n      {\r\n        name: \"Three Star\",\r\n        key: \"/three/start/threeStar\",\r\n      },\r\n      {\r\n        name: \"UV Mapping\",\r\n        key: \"/three/start/uvMapping\",\r\n      },\r\n      {\r\n        name: \"Magic Cube\",\r\n        key: \"/three/start/magicCube\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"Game\",\r\n    key: \"/game\",\r\n    icon: DeploymentUnitOutlined,\r\n    subMenu: [\r\n      {\r\n        name: \"Snake\",\r\n        key: \"/game/snake\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"Echarts\",\r\n    key: \"/echarts\",\r\n    icon: PieChartOutlined,\r\n    subMenu: [\r\n      {\r\n        name: \"Liquid Fill\",\r\n        key: \"/echarts/liquidfill\",\r\n      },\r\n    ],\r\n  },\r\n]\r\n","import React from \"react\"\nimport { Menu } from \"antd\"\nimport { useHistory } from \"react-router-dom\"\nimport menuTree from \"./menuTree\"\n\nconst transferTree = (menu) => {\n  if (!menu.subMenu) {\n    return (\n      <Menu.Item key={menu.key}>\n        {menu.icon && React.createElement(menu.icon)}\n        <span>{menu.name}</span>\n      </Menu.Item>\n    )\n  } else {\n    const subMenuTitle = (\n      <span>\n        {menu.icon && React.createElement(menu.icon)}\n        <span>{menu.name}</span>\n      </span>\n    )\n    const subMenuArr = []\n    menu.subMenu.forEach((childMenu) => {\n      subMenuArr.push(transferTree(childMenu))\n    })\n    return (\n      <Menu.SubMenu key={menu?.key} title={subMenuTitle}>\n        {subMenuArr}\n      </Menu.SubMenu>\n    )\n  }\n}\n\nconst PrimaryMenu = () => {\n  const history = useHistory()\n  const Menus = menuTree.map((menu) => transferTree(menu))\n\n  const changeRouter = (param) => {\n    param.key && history.push(param.key)\n  }\n\n  return (\n    <Menu\n      onClick={changeRouter}\n      theme=\"dark\"\n      mode=\"inline\"\n      defaultSelectedKeys={[\"/\"]}\n    >\n      {Menus}\n    </Menu>\n  )\n}\n\nexport default PrimaryMenu\n","import React, { useContext, useMemo } from \"react\"\nimport { Breadcrumb, Dropdown, Menu } from \"antd\"\nimport { useLocation } from \"react-router\"\nimport { useHistory } from \"react-router-dom\"\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\"\nimport { LayoutContext } from \"./PrimaryLayout\"\nimport menuTree from \"./menuTree\"\n\nconst assembleTree = (menus, parent) => {\n  for (let i = 0; i < menus.length; i++) {\n    let menu = menus[i]\n    let subMenus = menu.subMenu,\n      path = parent ? parent + \"-\" + menu.name : menu.name\n    menu.path = path\n    subMenus && assembleTree(subMenus, path)\n  }\n}\n\nconst getMenuByPath = (menus, path) => {\n  for (let i = 0; i < menus.length; i++) {\n    let menu = menus[i]\n    if (menu.key === path) {\n      return menu\n    }\n    let subMenus = menu.subMenu\n    if (subMenus && (menu = getMenuByPath(subMenus, path))) {\n      return menu\n    }\n  }\n}\n\nassembleTree(menuTree, null)\n\nconst PrimaryLayout = () => {\n  const layoutContext = useContext(LayoutContext)\n  const location = useLocation()\n  const history = useHistory()\n  const breadRoute = useMemo(() => {\n    const targetMenu = getMenuByPath(menuTree, location.pathname)\n    return targetMenu?.path ? targetMenu.path.split(\"-\") : []\n  }, [location.pathname])\n  const userMenu = (\n    <Menu\n      onClick={() => {\n        localStorage.removeItem(\"LOGIN\")\n        history.push(\"/login\")\n      }}\n    >\n      <Menu.Item>logout</Menu.Item>\n    </Menu>\n  )\n  return (\n    <div className=\"primary-header\">\n      {React.createElement(\n        layoutContext.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n        {\n          className: \"trigger\",\n          onClick: () => {\n            layoutContext.toggleCollapse(!layoutContext.collapsed)\n          },\n        }\n      )}\n      <Breadcrumb>\n        {breadRoute.map((name, index) => {\n          return <Breadcrumb.Item key={index}>{name}</Breadcrumb.Item>\n        })}\n      </Breadcrumb>\n      <Dropdown overlay={userMenu}>\n        <div className=\"user-info\"></div>\n      </Dropdown>\n    </div>\n  )\n}\n\nexport default PrimaryLayout\n","import LiquidFill from \"./LiquidFill\"\nexport default {\n  name: \"echarts\",\n  routes: [\n    {\n      name: \"echarts\",\n      path: \"/echarts/liquidfill\",\n      component: LiquidFill,\n    },\n  ],\n}\n","import React from \"react\"\nimport echarts from \"echarts\"\nimport \"echarts-liquidfill\"\n\nclass LiquidFill extends React.Component {\n  constructor(props) {\n    super(props)\n    this.chart = null\n  }\n  componentDidMount() {\n    this.chart = echarts.init(this.refs.chart)\n    //window.onresize = this.resize.bind(this)\n    this.initChart()\n  }\n\n  initChart() {\n    const option = {\n      backgroundColor: \"#151934\",\n      series: [\n        {\n          type: \"liquidFill\",\n          radius: \"100%\",\n          //color: [\"red\", \"yellow\"],\n          center: [\"50%\", \"50%\"],\n          data: [0.4544, 0.4544],\n          backgroundStyle: {\n            borderWidth: 2,\n            borderColor: \"#1789fb\",\n            color: \"#1c233f\",\n          },\n          outline: {\n            show: false,\n            itemStyle: {\n              borderWidth: 5,\n              borderColor: \"#1789fb\",\n              borderType: \"dashed\",\n            },\n          },\n          itemStyle: {\n            opacity: 0.95,\n            shadowBlur: 50,\n            shadowColor: \"rgba(0, 0, 0, 0.4)\",\n            color: {\n              type: \"linear\",\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [\n                {\n                  offset: 1,\n                  color: \"rgba(58, 71, 212, 0)\",\n                },\n                {\n                  offset: 0.5,\n                  color: \"rgba(31, 222, 225, .2)\",\n                },\n                {\n                  offset: 0,\n                  color: \"rgba(31, 222, 225, 1)\",\n                },\n              ],\n              globalCoord: false,\n            },\n          },\n          label: {\n            show: false,\n            normal: {\n              //此处没有生效，本地生效\n              textStyle: {\n                fontSize: 20,\n                color: \"red\",\n              },\n            },\n          },\n        },\n      ],\n    }\n    this.chart.setOption(option)\n  }\n\n  render() {\n    return (\n      <div\n        className=\"login-background\"\n        ref=\"chart\"\n        style={{\n          width: \"400px\",\n          height: \"400px\",\n        }}\n      ></div>\n    )\n  }\n}\n\nexport default LiquidFill\n","export default (delay) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve()\n    }, delay)\n  })\n}\n","import React from \"react\"\nimport * as THREE from \"three\"\nimport * as OrbitControls from \"three-orbitcontrols\"\nimport delay from \"../../../utils/delay\"\n// const THREE = require(\"three\")\n// const OrbitControls = require(\"three-orbitcontrols\")\n// 两种引入方式都可以\n\nclass Introduce extends React.Component {\n  constructor(props) {\n    super(props)\n    this.scene = null\n    this.renderer = null\n    this.camera = null\n\n    this.cubeMesh = null\n    this.sphereMesh = null\n    this.cylindeMesh = null\n\n    this.T0 = 0\n    this.T1 = 0\n  }\n\n  componentDidMount() {\n    this.init()\n    // setInterval(() => {\n    //   this.renderGL()\n    // }, 20)\n  }\n\n  async init() {\n    this.scene = new THREE.Scene()\n    this.initMesh()\n\n    //辅助坐标系\n    let axisHelper = new THREE.AxisHelper(250)\n    this.scene.add(axisHelper)\n\n    //点光源\n    let point = new THREE.PointLight(0xffffff)\n    point.position.set(400, 200, 300) //点光源位置\n    this.scene.add(point) //点光源添加到场景中\n    //环境光\n    let ambient = new THREE.AmbientLight(0x444444)\n    this.scene.add(ambient)\n\n    await delay(10)\n    let width = this.refs.three.clientWidth //window.innerWidth //窗口宽度\n    let height = this.refs.three.clientHeight //window.innerHeight //窗口高度\n    let k = width / height //窗口宽高比\n    let s = 200 //三维场景显示范围控制系数，系数越大，显示的范围越大\n    //创建相机 CAMERA\n    this.camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 1000)\n    this.camera.position.set(200, 100, 100) //设置相机位置\n    this.camera.lookAt(this.scene.position) //设置相机方向(指向的场景对象)\n    // RENDERER\n    this.renderer = new THREE.WebGLRenderer()\n    this.renderer.setSize(width, height) //设置渲染区域尺寸\n    this.renderer.setClearColor(0x00000, 1) //设置背景颜色\n    this.refs.three.appendChild(this.renderer.domElement) //body元素中插入canvas对象\n    //执行渲染操作   指定场景、相机作为参数\n    this.T0 = new Date()\n    this.renderGL()\n    new OrbitControls(this.camera, this.renderer.domElement)\n\n    // let controls = new OrbitControls(this.camera, this.renderer.domElement)\n    // controls.addEventListener(\"change\", this.renderGL.bind(this))\n  }\n\n  initMesh() {\n    let sphereGeo = new THREE.SphereGeometry(50, 10, 10) //创建一个球体几何对象\n    let cubeGeo = new THREE.BoxGeometry(200, 100, 50) //创建一个立方体几何对象Geometry\n    let cylindeGeo = new THREE.CylinderGeometry(50, 30, 90, 100, 100)\n    let materialLambert = new THREE.MeshLambertMaterial({\n      color: 0x0000ff,\n      opacity: 0.7,\n      transparent: true,\n    })\n    let materialBasic = new THREE.MeshBasicMaterial({\n      color: 0xffff00,\n      wireframe: true,\n    })\n    let materialPhong = new THREE.MeshPhongMaterial({\n      color: 0x0000ff,\n      specular: 0x4488ee,\n      shininess: 12,\n    })\n    this.cubeMesh = new THREE.Mesh(cubeGeo, materialLambert)\n    this.sphereMesh = new THREE.Mesh(sphereGeo, materialBasic)\n    this.cylindeMesh = new THREE.Mesh(cylindeGeo, materialPhong)\n    this.cubeMesh.position.set(0, 0, 0)\n    this.sphereMesh.position.set(0, 100, 0) //几何体中心位置\n    this.cylindeMesh.position.set(200, 0, 0)\n    this.scene.add(this.cubeMesh)\n    this.scene.add(this.sphereMesh)\n    this.scene.add(this.cylindeMesh)\n  }\n\n  renderGL() {\n    // 保证每次执行时间内转动的角度是一样的\n    this.T1 = new Date()\n    let t = this.T1 - this.T0\n    this.T0 = this.T1\n    //console.log(t) // t = 16.7ms 16~17\n    this.renderer.render(this.scene, this.camera) //执行渲染操作\n    this.cubeMesh.rotateY(0.001 * t) //每次绕y轴旋转0.01弧度 一周2PI 6.28 每秒转0.5\n    this.sphereMesh.rotateY(0.002 * t)\n    requestAnimationFrame(this.renderGL.bind(this))\n  }\n\n  render() {\n    return (\n      <div\n        ref=\"three\"\n        id=\"three\"\n        style={{ width: \"100%\", height: \"100%\" }}\n      ></div>\n    )\n  }\n}\n\nexport default Introduce\n","import React from \"react\"\nimport * as THREE from \"three\"\nimport * as OrbitControls from \"three-orbitcontrols\"\nimport delay from \"../../../utils/delay\"\n// const THREE = require(\"three\")\n// const OrbitControls = require(\"three-orbitcontrols\")\n// 两种引入方式都可以\nconst earthImg = require(\"../../../assets/images/earth.jpg\")\n\nclass Introduce extends React.Component {\n  constructor(props) {\n    super(props)\n    this.scene = null\n    this.renderer = null\n    this.camera = null\n\n    this.cubeMesh = null\n    this.sphereMesh = null\n    this.cylindeMesh = null\n\n    this.T0 = 0\n    this.T1 = 0\n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  async init() {\n    this.scene = new THREE.Scene()\n    this.initMesh()\n\n    //辅助坐标系\n    let axisHelper = new THREE.AxisHelper(250)\n    this.scene.add(axisHelper)\n\n    //点光源\n    let point = new THREE.PointLight(0xffffff)\n    point.position.set(400, 0, 0) //点光源位置\n    this.scene.add(point) //点光源添加到场景中\n    //环境光\n    let ambient = new THREE.AmbientLight(0xffffff)\n    this.scene.add(ambient)\n\n    await delay(10)\n    let width = this.refs.three.clientWidth //window.innerWidth //窗口宽度\n    let height = this.refs.three.clientHeight //window.innerHeight //窗口高度\n    let k = width / height //窗口宽高比\n    let s = 200 //三维场景显示范围控制系数，系数越大，显示的范围越大\n    //创建相机 CAMERA\n    this.camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 1000)\n    this.camera.position.set(200, 100, 100) //设置相机位置\n    this.camera.lookAt(this.scene.position) //设置相机方向(指向的场景对象)\n    // RENDERER\n    this.renderer = new THREE.WebGLRenderer()\n    this.renderer.setSize(width, height) //设置渲染区域尺寸\n    this.renderer.setClearColor(0x00000, 1) //设置背景颜色\n    this.refs.three.appendChild(this.renderer.domElement) //body元素中插入canvas对象\n    //执行渲染操作   指定场景、相机作为参数\n    this.T0 = new Date()\n    this.renderGL()\n    new OrbitControls(this.camera, this.renderer.domElement)\n\n    // let controls = new OrbitControls(this.camera, this.renderer.domElement)\n    // controls.addEventListener(\"change\", this.renderGL.bind(this))\n  }\n\n  async initMesh() {\n    let sphereGeo = new THREE.SphereGeometry(100, 40, 40) //创建一个球体几何对象\n    let ImageLoader = new THREE.ImageLoader()\n    let img = await ImageLoader.load(earthImg)\n    let texture = new THREE.Texture(img)\n    texture.needsUpdate = true\n    let materialBasic = new THREE.MeshPhongMaterial({\n      //color: 0xffff00,\n      //wireframe: true,\n      map: texture,\n    })\n    this.sphereMesh = new THREE.Mesh(sphereGeo, materialBasic)\n    this.sphereMesh.position.set(0, 0, 0) //几何体中心位置\n    this.scene.add(this.sphereMesh)\n\n    //line\n    // let geo = new THREE.Geometry()\n    // let arc = new THREE.ArcCurve(0, 0, 10, 0, 2 * Math.PI)\n    // let points = arc.getPoints(50)\n    // geo.setFromPoints(points)\n    // let material = new THREE.LineBasicMaterial({\n    //   color: 0xff0000,\n    // })\n    // this.line = new THREE.Line(geo, material)\n    // let V1 = new Vector3(0, 2, 0)\n    // this.line.position.set(100, 0, 0)\n    // this.line.rotateOnAxis(V1, Math.PI / 2)\n    // this.scene.add(this.line)\n\n    // 点模型\n    let geometry2 = new THREE.Geometry()\n    let o = new THREE.Vector3(0, 0, 0)\n    let p1 = new THREE.Vector3(102, 0, 0)\n    let p2 = new THREE.Vector3(0, 102, 0)\n    let cp = new THREE.Vector3().addVectors(p1, p2).divideScalar(2)\n    let l = p1.distanceTo(p2)\n    let L = cp.distanceTo(o)\n    let K = cp.multiplyScalar((l + L) / L)\n\n    geometry2.vertices.push(p1, p2, K)\n    let material2 = new THREE.PointsMaterial({\n      color: 0xff0000,\n      size: 10,\n    })\n    //点模型对象\n    let points = new THREE.Points(geometry2, material2)\n    this.scene.add(points) //点模型对象添加到场景中\n\n    //贝塞尔曲线\n    let geometry = new THREE.Geometry()\n    let curve = new THREE.QuadraticBezierCurve3(p1, K, p2)\n    let points1 = curve.getPoints(100) //分段数100，返回101个顶点\n    geometry.setFromPoints(points1)\n    //材质对象\n    let material = new THREE.LineBasicMaterial({\n      color: 0xff0000,\n    })\n    let line = new THREE.Line(geometry, material)\n    this.scene.add(line) //线条对象添加到场景中\n  }\n\n  renderGL() {\n    // 保证每次执行时间内转动的角度是一样的\n    this.T1 = new Date()\n    let t = this.T1 - this.T0\n    this.T0 = this.T1\n    this.renderer.render(this.scene, this.camera) //执行渲染操作\n    this.sphereMesh.rotateY(0.001 * t)\n    //this.line.rotateY(0.001 * t)\n    requestAnimationFrame(this.renderGL.bind(this))\n  }\n\n  render() {\n    return (\n      <div\n        ref=\"three\"\n        id=\"three\"\n        style={{ width: \"100%\", height: \"100%\" }}\n      ></div>\n    )\n  }\n}\n\nexport default Introduce\n","import React from \"react\"\nimport delay from \"../../../utils/delay\"\n// import { vertexShader, fragmentShader } from \"../shader\"\nconst THREE = require(\"three\")\nconst OrbitControls = require(\"three-orbitcontrols\")\n\nconst SPHERES = [\n  {\n    name: \"Sun\",\n    img: require(\"../../../assets/images/sun.jpg\"),\n    raduis: 100,\n    position: [0, 0, 0],\n    cita: 0,\n  },\n  {\n    name: \"Earth\",\n    img: require(\"../../../assets/images/earth.jpg\"),\n    raduis: 50,\n    position: [650, 0, 0],\n    cita: 0,\n    T: 30,\n    R: 650,\n  },\n  {\n    name: \"Moon\",\n    img: require(\"../../../assets/images/moon.jpg\"),\n    raduis: 30,\n    position: [800, 0, 0],\n    cita: 0,\n    T: 5,\n    R: 150,\n  },\n]\n\nclass Introduce extends React.Component {\n  constructor(props) {\n    super(props)\n    this.scene = null\n    this.renderer = null\n    this.camera = null\n    this.clock = null\n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  componentWillUnmount() {\n    //释放内存\n    for (let i = this.scene.children.length - 1; i >= 0; i--) {\n      this.scene.remove(this.scene.children[i])\n    }\n    window.cancelAnimationFrame(this.requestAnimationFrame)\n    document.removeEventListener(\"click\", this.onClick)\n    window.onresize = null\n  }\n\n  async init() {\n    this.scene = new THREE.Scene()\n    this.initBackground()\n\n    //辅助坐标系\n    // let axisHelper = new THREE.AxisHelper(250)\n    // this.scene.add(axisHelper)\n\n    this.initMesh()\n    //this.initAnimation()\n    this.initLight()\n    await delay(10) //正确获取元素高度宽度\n    this.initCameraAndRenderer()\n    //执行渲染操作   指定场景、相机作为参数\n    this.clock = new THREE.Clock()\n    this.renderGL()\n    new OrbitControls(this.camera, this.renderer.domElement)\n    document.addEventListener(\"click\", this.onClick.bind(this), false)\n    window.onresize = this.resize.bind(this)\n  }\n\n  resize() {\n    let width = this.refs.three.clientWidth\n    let height = this.refs.three.clientHeight\n    let k = width / height\n    let s = 300\n    this.renderer.setSize(width, height)\n    this.camera.left = -s * k\n    this.camera.right = s * k\n    this.camera.top = s\n    this.camera.bottom = -s\n    this.camera.updateProjectionMatrix()\n  }\n\n  initBackground() {\n    let geom = new THREE.Geometry()\n    let material = new THREE.ParticleBasicMaterial({\n      size: 0.01,\n      vertexColors: true,\n    })\n    let n = 1200\n    for (let i = 0; i < 3000; i++) {\n      let particle = new THREE.Vector3(\n        (Math.random() - 0.5) * n,\n        (Math.random() - 0.5) * n,\n        (Math.random() - 0.5) * n\n      )\n      geom.vertices.push(particle)\n      let color_k = Math.random()\n      geom.colors.push(new THREE.Color(color_k, color_k, color_k * 0.6))\n    }\n\n    let cloud = new THREE.ParticleSystem(geom, material)\n    this.scene.add(cloud)\n  }\n\n  async initMesh() {\n    SPHERES.forEach((item) => {\n      this.createSphere(item)\n    })\n  }\n\n  async createSphere(data) {\n    let sphereGeo = new THREE.SphereGeometry(data.raduis, 50, 50) //创建一个球体几何对象\n    let ImageLoader = new THREE.ImageLoader()\n    let img = await ImageLoader.load(data.img)\n    let texture = new THREE.Texture(img)\n    texture.needsUpdate = true\n    let materialBasic = new THREE.MeshPhongMaterial({\n      map: texture,\n      side: THREE.DoubleSide,\n    })\n    let sphereMesh = new THREE.Mesh(sphereGeo, materialBasic)\n    sphereMesh.position.set(...data.position) //几何体中心位置\n    sphereMesh.name = data.name\n    data.mesh = sphereMesh\n    this.scene.add(sphereMesh)\n  }\n\n  // initAnimation() {\n  //   let posTrack = new THREE.KeyframeTrack(\n  //     \".scale\",\n  //     [0, 4],\n  //     [0.01, 0.01, 0.01, 1, 1, 1]\n  //   )\n  //   let clip = new THREE.AnimationClip(\"default\", 4, [posTrack])\n  //   this.mixer = new THREE.AnimationMixer()\n  //   let AnimationAction = this.mixer.clipAction(clip, this.sun)\n  //   AnimationAction.loop = THREE.LoopOnce\n  //   AnimationAction.clampWhenFinished = true\n  //   AnimationAction.play()\n  // }\n\n  initLight() {\n    let directionalLight = new THREE.DirectionalLight(16777215, 0.9)\n    directionalLight.position.set(400, 200, 300)\n    this.scene.add(directionalLight)\n    let directionalLight2 = new THREE.DirectionalLight(16777215, 0.9)\n    directionalLight2.position.set(-400, -200, -300)\n    this.scene.add(directionalLight2)\n    let ambient = new THREE.AmbientLight(16777215, 0.6)\n    this.scene.add(ambient)\n  }\n\n  initCameraAndRenderer() {\n    let width = this.refs.three.clientWidth //window.innerWidth //窗口宽度\n    let height = this.refs.three.clientHeight //window.innerHeight //窗口高度\n    let k = width / height //窗口宽高比\n    let s = 300 //三维场景显示范围控制系数，系数越大，显示的范围越大\n    //创建相机 CAMERA\n    this.camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 2000) //正交\n    //this.camera = new THREE.PerspectiveCamera(90, width / height, 1, 2000) //透视摄像机\n    this.camera.position.set(0, 400, 1000) //设置相机位置\n    this.camera.lookAt(this.scene.position) //设置相机方向(指向的场景对象)\n    // RENDERER\n    this.renderer = new THREE.WebGLRenderer({ antialias: true })\n    this.renderer.setSize(width, height) //设置渲染区域尺寸\n    this.renderer.setClearColor(0x000000, 1) //设置背景颜色\n    this.refs.three.appendChild(this.renderer.domElement) //body元素中插入canvas对象\n  }\n\n  renderGL() {\n    let delta = this.clock.getDelta()\n    //自转\n    SPHERES.forEach((s) => {\n      s.mesh.rotation.y += delta\n    })\n    //公转\n    let earth = SPHERES[1]\n    earth.cita += (delta * 2 * Math.PI) / earth.T\n    earth.mesh.position.set(\n      earth.R * Math.cos(earth.cita),\n      0,\n      earth.R * Math.sin(earth.cita)\n    )\n\n    let moon = SPHERES[2]\n    moon.cita += (delta * 2 * Math.PI) / moon.T\n    moon.mesh.position.set(\n      moon.R * Math.cos(moon.cita) + earth.R * Math.cos(earth.cita),\n      0,\n      moon.R * Math.sin(moon.cita) + earth.R * Math.sin(earth.cita)\n    )\n\n    this.camera.lookAt(earth.mesh.position)\n    //console.log(delta) //0.016 ~0.017\n    // this.uniforms.time.value += delta\n    // this.sun.rotation.y -= 0.005\n    // this.mixer.update(delta)\n    this.renderer.render(this.scene, this.camera)\n    this.requestAnimationFrame = requestAnimationFrame(this.renderGL.bind(this))\n  }\n\n  //射线来决定第一个点中的物体\n  onClick(e) {\n    try {\n      let offsetTop = this.refs.three.offsetTop\n      let offsetLeft = this.refs.three.offsetLeft\n      let width = this.refs.three.clientWidth\n      let height = this.refs.three.clientHeight\n      var Sx = e.clientX - offsetLeft\n      var Sy = e.clientY - offsetTop\n      let x = (Sx / width) * 2 - 1\n      let y = -(Sy / height) * 2 + 1\n      let raycaster = new THREE.Raycaster()\n      raycaster.setFromCamera(new THREE.Vector2(x, y), this.camera)\n      let intersectsArr = SPHERES.map((item) => item.mesh)\n      var intersects = raycaster.intersectObjects(intersectsArr, false)\n      if (intersects.length > 0) {\n        console.log(intersects[0].object.name)\n      }\n    } catch {\n      console.log(\"change page\")\n    }\n  }\n\n  render() {\n    return (\n      <div\n        ref=\"three\"\n        id=\"three\"\n        style={{ width: \"100%\", height: \"100%\" }}\n      ></div>\n    )\n  }\n}\n\nexport default Introduce\n","import React from \"react\"\nimport * as THREE from \"three\"\nimport * as OrbitControls from \"three-orbitcontrols\"\nimport delay from \"../../../utils/delay\"\n\nconst IMG_ARRAY = [\n  require(\"../../../assets/images/uv-ge.jpg\"),\n  require(\"../../../assets/images/uv-chen.jpg\"),\n  require(\"../../../assets/images/uv-ai.jpg\"),\n  require(\"../../../assets/images/uv-gao.jpg\"),\n  require(\"../../../assets/images/uv-feng.jpg\"),\n  require(\"../../../assets/images/uv-niu.jpg\"),\n]\n\nclass Introduce extends React.Component {\n  constructor(props) {\n    super(props)\n    this.scene = null\n    this.renderer = null\n    this.camera = null\n\n    this.cubeMesh = null\n    this.clock = null\n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  async init() {\n    this.scene = new THREE.Scene()\n    this.initMesh()\n\n    //辅助坐标系\n    let axisHelper = new THREE.AxisHelper(250)\n    this.scene.add(axisHelper)\n\n    //点光源\n    let point = new THREE.PointLight(0xffffff)\n    point.position.set(400, 200, 300) //点光源位置\n    this.scene.add(point) //点光源添加到场景中\n    //环境光\n    let ambient = new THREE.AmbientLight(0x444444)\n    this.scene.add(ambient)\n\n    await delay(10)\n    let width = this.refs.three.clientWidth //window.innerWidth //窗口宽度\n    let height = this.refs.three.clientHeight //window.innerHeight //窗口高度\n    let k = width / height //窗口宽高比\n    let s = 200 //三维场景显示范围控制系数，系数越大，显示的范围越大\n    //创建相机 CAMERA\n    this.camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 1000)\n    this.camera.position.set(300, 300, 100) //设置相机位置\n    this.camera.lookAt(this.scene.position) //设置相机方向(指向的场景对象)\n    // RENDERER\n    this.renderer = new THREE.WebGLRenderer()\n    this.renderer.setSize(width, height) //设置渲染区域尺寸\n    this.renderer.setClearColor(0x00000, 1) //设置背景颜色\n    this.refs.three.appendChild(this.renderer.domElement) //body元素中插入canvas对象\n    //执行渲染操作   指定场景、相机作为参数\n    this.clock = new THREE.Clock()\n    this.renderGL()\n    new OrbitControls(this.camera, this.renderer.domElement)\n\n    // let controls = new OrbitControls(this.camera, this.renderer.domElement)\n    // controls.addEventListener(\"change\", this.renderGL.bind(this))\n  }\n\n  initMesh() {\n    let cubeGeo = new THREE.BoxGeometry(100, 100, 100) //创建一个立方体几何对象Geometry\n\n    let meshFaceMaterial = []\n    IMG_ARRAY.forEach((img) => {\n      meshFaceMaterial.push(\n        new THREE.MeshPhongMaterial({\n          map: THREE.ImageUtils.loadTexture(img),\n          side: THREE.DoubleSide,\n        })\n      )\n    })\n\n    this.cubeMesh = new THREE.Mesh(cubeGeo, meshFaceMaterial)\n    this.cubeMesh.position.set(0, 0, 0)\n    this.scene.add(this.cubeMesh)\n\n    let newCubeMesh = this.cubeMesh.clone()\n    newCubeMesh.position.set(150, 150, 150)\n    this.scene.add(newCubeMesh)\n  }\n\n  renderGL() {\n    let delta = this.clock.getDelta()\n    this.renderer.render(this.scene, this.camera)\n    this.cubeMesh.rotateY(delta)\n\n    requestAnimationFrame(this.renderGL.bind(this))\n  }\n\n  render() {\n    return (\n      <div\n        ref=\"three\"\n        id=\"three\"\n        style={{ width: \"100%\", height: \"100%\" }}\n      ></div>\n    )\n  }\n}\n\nexport default Introduce\n","import React from \"react\"\nimport * as THREE from \"three\"\nimport * as OrbitControls from \"three-orbitcontrols\"\nimport delay from \"../../../utils/delay\"\n\nconst IMG_ARRAY = [\n  require(\"../../../assets/images/uv-ge.jpg\"),\n  require(\"../../../assets/images/uv-chen.jpg\"),\n  require(\"../../../assets/images/uv-ai.jpg\"),\n  require(\"../../../assets/images/uv-gao.jpg\"),\n  require(\"../../../assets/images/uv-feng.jpg\"),\n  require(\"../../../assets/images/uv-niu.jpg\"),\n]\n\nconst POSITION = [\n  [0, 0, 30],\n  [0, 0, -30],\n  [0, 30, 0],\n  [0, -30, 0],\n  [30, 0, 0],\n  [-30, 0, 0],\n\n  [0, 30, 30],\n  [0, 30, -30],\n  [0, -30, 30],\n  [0, -30, -30],\n\n  [30, 0, 30],\n  [30, 0, -30],\n  [-30, 0, 30],\n  [-30, 0, -30],\n\n  [30, 30, 0],\n  [30, -30, 0],\n  [-30, 30, 0],\n  [-30, -30, 0],\n\n  [30, 30, 30],\n  [30, 30, -30],\n  [30, -30, 30],\n  [30, -30, -30],\n\n  [-30, 30, 30],\n  [-30, 30, -30],\n  [-30, -30, 30],\n  [-30, -30, -30],\n]\n\nclass Introduce extends React.Component {\n  constructor(props) {\n    super(props)\n    this.scene = null\n    this.renderer = null\n    this.camera = null\n\n    this.cubeMesh = null\n    this.clock = null\n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  async init() {\n    this.scene = new THREE.Scene()\n    this.initMesh()\n\n    //辅助坐标系\n    let axisHelper = new THREE.AxisHelper(250)\n    this.scene.add(axisHelper)\n\n    //点光源\n    let point = new THREE.PointLight(0xffffff)\n    point.position.set(400, 200, 300) //点光源位置\n    this.scene.add(point) //点光源添加到场景中\n    //环境光\n    let ambient = new THREE.AmbientLight(0xaaaaaa)\n    this.scene.add(ambient)\n\n    await delay(10)\n    let width = this.refs.three.clientWidth //window.innerWidth //窗口宽度\n    let height = this.refs.three.clientHeight //window.innerHeight //窗口高度\n    let k = width / height //窗口宽高比\n    let s = 200 //三维场景显示范围控制系数，系数越大，显示的范围越大\n    //创建相机 CAMERA\n    this.camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 1000)\n    this.camera.position.set(300, 300, 100) //设置相机位置\n    this.camera.lookAt(this.scene.position) //设置相机方向(指向的场景对象)\n    // RENDERER\n    this.renderer = new THREE.WebGLRenderer()\n    this.renderer.setSize(width, height) //设置渲染区域尺寸\n    this.renderer.setClearColor(0x00000, 1) //设置背景颜色\n    this.refs.three.appendChild(this.renderer.domElement) //body元素中插入canvas对象\n    //执行渲染操作   指定场景、相机作为参数\n    this.clock = new THREE.Clock()\n    //this.renderer.render(this.scene, this.camera)\n    this.beginRotate()\n    new OrbitControls(this.camera, this.renderer.domElement)\n\n    // let controls = new OrbitControls(this.camera, this.renderer.domElement)\n    // controls.addEventListener(\"change\", this.renderGL.bind(this))\n  }\n\n  initMesh() {\n    let cubeGeo = new THREE.BoxGeometry(30, 30, 30) //创建一个立方体几何对象Geometry\n    let meshFaceMaterial = []\n    IMG_ARRAY.forEach((img) => {\n      meshFaceMaterial.push(\n        new THREE.MeshPhongMaterial({\n          map: THREE.ImageUtils.loadTexture(img),\n          side: THREE.DoubleSide,\n        })\n      )\n    })\n\n    this.cubeMesh = new THREE.Mesh(cubeGeo, meshFaceMaterial)\n    this.cubeMesh.position.set(0, 0, 0)\n    this.scene.add(this.cubeMesh)\n\n    POSITION.forEach((item) => {\n      let newCubeMesh = this.cubeMesh.clone()\n      newCubeMesh.position.set(...item)\n      this.scene.add(newCubeMesh)\n    })\n  }\n\n  async beginRotate(axis = \"x\") {\n    let target = [30, 0, -30][this.random3()]\n    let group = []\n    let cubes = this.scene.children\n    for (let i = cubes.length - 1; i >= 0; i--) {\n      if (cubes[i].type === \"Mesh\" && cubes[i].position[axis] === target) {\n        group.push(cubes[i])\n      }\n    }\n    console.log(group.length)\n    window.scene = this.scene\n    this.renderGL(group, axis, Math.PI / 2, 2)\n    // await delay(2000)\n    // window.cancelAnimationFrame(this.requestAnimationFrame)\n    // //await delay(1000)\n    // this.correctPosition()\n    // this.beginRotate([\"x\", \"y\", \"z\"][this.random3()])\n  }\n\n  correctPosition() {\n    this.scene.children.forEach((item) => {\n      if (item.type === \"Mesh\") {\n        ;[\"x\", \"y\", \"z\"].forEach((axis) => {\n          if (Math.abs(item.position[axis]) < 5) {\n            item.position[axis] = 0\n          } else if (item.position.x > 25) {\n            item.position[axis] = 30\n          } else if (item.position.x < -25) {\n            item.position[axis] = -30\n          }\n        })\n      }\n    })\n  }\n\n  async renderGL(group, axis, angle, T) {\n    let delta = this.clock.getDelta()\n    let cita = (angle * delta) / T\n    this.renderer.render(this.scene, this.camera)\n    if (axis === \"x\") {\n      group.forEach((item) => {\n        let _x = item.position.x,\n          _y = item.position.y,\n          _z = item.position.z,\n          x = _x,\n          y = _y * Math.cos(cita) - _z * Math.sin(cita),\n          z = _z * Math.cos(cita) + _y * Math.sin(cita)\n        item.position.set(x, y, z) //中心点旋转\n        item.rotateX(cita) //自旋\n      })\n    } else if (axis === \"y\") {\n      group.forEach((item) => {\n        let _x = item.position.x,\n          _y = item.position.y,\n          _z = item.position.z,\n          x = _x * Math.cos(cita) - _z * Math.sin(cita),\n          y = _y,\n          z = _z * Math.cos(cita) + _x * Math.sin(cita)\n        item.position.set(x, y, z) //中心点旋转\n        item.rotateY(cita) //自旋\n      })\n    } else {\n      group.forEach((item) => {\n        let _x = item.position.x,\n          _y = item.position.y,\n          _z = item.position.z,\n          x = _x * Math.cos(cita) + _y * Math.sin(cita),\n          y = _y * Math.cos(cita) - _x * Math.sin(cita),\n          z = _z\n        item.position.set(x, y, z) //中心点旋转\n        item.rotateZ(cita) //自旋\n      })\n    }\n    this.requestAnimationFrame = window.requestAnimationFrame(\n      this.renderGL.bind(this, group, axis, angle, T)\n    )\n  }\n\n  random3() {\n    let number = Math.random()\n    if (number < 0.3333) {\n      return 0\n    } else if (number >= 0.3333 && number < 0.6666) {\n      return 1\n    } else {\n      return 2\n    }\n  }\n\n  render() {\n    return (\n      <div\n        ref=\"three\"\n        id=\"three\"\n        style={{ width: \"100%\", height: \"100%\" }}\n      ></div>\n    )\n  }\n}\n\nexport default Introduce\n","import Introduce from \"./start/Introduce\"\nimport SimpleEarth from \"./start/SimpleEarth\"\nimport ThreeStar from \"./start/ThreeStar\"\nimport UVMapping from \"./start/UVMapping\"\nimport MagicCube from \"./start/MagicCube\"\nexport default {\n  name: \"three\",\n  routes: [\n    {\n      name: \"three\",\n      path: \"/three/start/introduce\",\n      component: Introduce,\n    },\n    {\n      name: \"three\",\n      path: \"/three/start/simpleEarth\",\n      component: SimpleEarth,\n    },\n    {\n      name: \"three\",\n      path: \"/three/start/threeStar\",\n      component: ThreeStar,\n    },\n    {\n      name: \"three\",\n      path: \"/three/start/uvMapping\",\n      component: UVMapping,\n    },\n    {\n      name: \"three\",\n      path: \"/three/start/magicCube\",\n      component: MagicCube,\n    },\n  ],\n}\n","import React, { useLayoutEffect } from \"react\"\nimport * as d3 from \"d3\"\nimport \"./home.less\"\n\nfunction Home() {\n  useLayoutEffect(() => {\n    let i = 0\n    let svg = d3\n      .select(\"#home\")\n      .append(\"svg\")\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", \"100%\")\n    svg\n      .append(\"rect\")\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", \"100%\")\n      .attr(\"fill\", \"#222222\")\n      .on(\"ontouchstart\" in document ? \"touchmove\" : \"mousemove\", particle)\n    function particle() {\n      let m = d3.mouse(this)\n      svg\n        .insert(\"circle\", \"rect\")\n        .attr(\"cx\", m[0])\n        .attr(\"cy\", m[1])\n        .attr(\"r\", 1e-6)\n        .style(\"stroke\", d3.hsl((i = (i + 1) % 360), 1, 0.5))\n        .style(\"stroke-opacity\", 1)\n        .transition()\n        .duration(2000)\n        .ease(Math.sqrt)\n        .attr(\"r\", 100)\n        .style(\"stroke-opacity\", 1e-6)\n        .remove()\n      d3.event.preventDefault()\n    }\n  }, [])\n  return <div id=\"home\" style={{ width: \"100%\", height: \"100%\" }}></div>\n}\n\nexport default Home\n","import Home from \"./Home\"\nexport default {\n  name: \"Home\",\n  routes: [\n    {\n      name: \"home\",\n      path: \"/\",\n      component: Home,\n    },\n  ],\n}\n","import echarts from \"./echarts\"\r\nimport three from \"./three\"\r\nimport home from \"./home\"\r\nimport game from \"./game\"\r\n\r\nexport default [echarts, three, home, game]\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\"\r\nimport \"./snake.less\"\r\n// class 版本\r\nclass Snake1 extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      count: 20,\r\n      mapData: [],\r\n      snake: [],\r\n      target: [],\r\n      direction: \"R\",\r\n      pause: false,\r\n      score: 0,\r\n      interval: -1,\r\n      time: 200,\r\n      end: false,\r\n      endMsg: \"\",\r\n    }\r\n    this.keydown = this.keydown.bind(this)\r\n    this.move = this.move.bind(this)\r\n    this.reset = this.reset.bind(this)\r\n  }\r\n  initMap() {\r\n    let snake = [\r\n      [4, 0],\r\n      [3, 0],\r\n      [2, 0],\r\n      [1, 0],\r\n      [0, 0],\r\n    ]\r\n    var _data = []\r\n    for (let i = 0; i < this.state.count; i++) {\r\n      var _row = []\r\n      for (let j = 0; j < this.state.count; j++) {\r\n        _row.push(0)\r\n      }\r\n      _data.push(_row)\r\n    }\r\n    snake.forEach((e) => {\r\n      _data[e[1]][e[0]] = 1\r\n    })\r\n    this.setState({\r\n      snake: snake,\r\n      mapData: _data,\r\n    })\r\n  }\r\n  keydown(e) {\r\n    let direction = this.state.direction\r\n    switch (e.keyCode) {\r\n      case 38:\r\n        if (direction !== \"D\") {\r\n          this.setState({\r\n            direction: \"U\",\r\n          })\r\n        }\r\n        break\r\n      case 40:\r\n        if (direction !== \"U\") {\r\n          this.setState({\r\n            direction: \"D\",\r\n          })\r\n        }\r\n        break\r\n      case 37:\r\n        if (direction !== \"R\") {\r\n          this.setState({\r\n            direction: \"L\",\r\n          })\r\n        }\r\n        break\r\n      case 39:\r\n        if (direction !== \"L\") {\r\n          this.setState({\r\n            direction: \"R\",\r\n          })\r\n        }\r\n        break\r\n      case 32:\r\n        if (!this.state.end) {\r\n          this.setState((state, props) => ({\r\n            pause: !state.pause,\r\n          }))\r\n          if (this.state.interval === -1) {\r\n            this.setState({\r\n              interval: setInterval(this.move, this.state.time),\r\n            })\r\n          } else {\r\n            clearInterval(this.state.interval)\r\n            this.setState({\r\n              interval: -1,\r\n            })\r\n          }\r\n        }\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n  createOneTarget() {\r\n    var valid = false,\r\n      x,\r\n      y,\r\n      food,\r\n      count = this.state.count,\r\n      number = Math.ceil(Math.random() * count * count)\r\n    while (!valid) {\r\n      x = (number - 1) % count\r\n      y = Math.ceil(number / count) - 1\r\n      food = [x, y]\r\n      if (this.exit(food)) {\r\n        number++\r\n        if (number > count * count) {\r\n          number = number - count * count\r\n        }\r\n      } else {\r\n        valid = true\r\n      }\r\n    }\r\n    this.setState((state, props) => {\r\n      state.mapData[y][x] = 2\r\n      return {\r\n        target: food,\r\n        mapData: state.mapData,\r\n      }\r\n    })\r\n  }\r\n  exit(p) {\r\n    var _exit = false\r\n    this.state.snake.forEach((e) => {\r\n      if (p[0] === e[0] && p[1] === e[1]) {\r\n        _exit = true\r\n        return\r\n      }\r\n    })\r\n    return _exit\r\n  }\r\n  createNewHead() {\r\n    var _snake = this.state.snake\r\n    var _head = _snake[0]\r\n    var _newHead = []\r\n    switch (this.state.direction) {\r\n      case \"U\":\r\n        _newHead[0] = _head[0]\r\n        _newHead[1] = _head[1] - 1\r\n        break\r\n      case \"D\":\r\n        _newHead[0] = _head[0]\r\n        _newHead[1] = _head[1] + 1\r\n        break\r\n      case \"L\":\r\n        _newHead[0] = _head[0] - 1\r\n        _newHead[1] = _head[1]\r\n        break\r\n      case \"R\":\r\n        _newHead[0] = _head[0] + 1\r\n        _newHead[1] = _head[1]\r\n        break\r\n      default:\r\n        break\r\n    }\r\n    return _newHead\r\n  }\r\n  draw(h, t) {\r\n    let data = this.state.mapData\r\n    if (h) {\r\n      data[h[1]][h[0]] = 1\r\n    }\r\n    if (t) {\r\n      data[t[1]][t[0]] = 0\r\n    }\r\n    this.setState({\r\n      mapData: data,\r\n    })\r\n  }\r\n  move() {\r\n    var _newHead = this.createNewHead(),\r\n      _snake = this.state.snake,\r\n      _count = this.state.count,\r\n      _target = this.state.target,\r\n      _tail\r\n    //是否超出边界\r\n    if (\r\n      _newHead[0] < 0 ||\r\n      _newHead[1] < 0 ||\r\n      _newHead[0] > _count - 1 ||\r\n      _newHead[1] > _count - 1\r\n    ) {\r\n      clearInterval(this.state.interval)\r\n      this.setState({\r\n        end: true,\r\n        interval: -1,\r\n        endMsg: \"游戏结束！\",\r\n      })\r\n      return\r\n    } else {\r\n      //是否撞到自己\r\n      if (this.exit(_newHead)) {\r\n        clearInterval(this.state.interval)\r\n        this.setState({\r\n          end: true,\r\n          interval: -1,\r\n          endMsg: \"游戏结束！\",\r\n        })\r\n        return\r\n      }\r\n    }\r\n    _snake.unshift(_newHead)\r\n    if (_target.length === 2 && _newHead.join(\"-\") === _target.join(\"-\")) {\r\n      this.setState((state, props) => ({\r\n        score: state.score + 1,\r\n      }))\r\n      if (_snake.length === _count * _count) {\r\n        clearInterval(this.state.interval)\r\n        this.setState({\r\n          end: true,\r\n          interval: -1,\r\n          endMsg: \"You Win\",\r\n        })\r\n      } else {\r\n        this.createOneTarget()\r\n      }\r\n    } else {\r\n      _tail = _snake.pop()\r\n    }\r\n    this.draw(_newHead, _tail)\r\n  }\r\n  reset() {\r\n    this.initMap()\r\n    this.createOneTarget()\r\n    this.setState((state, props) => {\r\n      clearInterval(state.interval)\r\n      return {\r\n        end: false,\r\n        interval: setInterval(this.move, this.state.time),\r\n        endMsg: \"\",\r\n        score: 0,\r\n        direction: \"R\",\r\n        pause: false,\r\n      }\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    this.initMap()\r\n    this.createOneTarget()\r\n    window.addEventListener(\"keydown\", this.keydown)\r\n    this.setState({\r\n      interval: setInterval(this.move, this.state.time),\r\n    })\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.keydown)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"snake-container\">\r\n        <table>\r\n          <tbody>\r\n            {this.state.mapData.map((row, i) => (\r\n              <tr key={i}>\r\n                {row.map((cell, j) => (\r\n                  <td\r\n                    key={i + \"-\" + j}\r\n                    className={\r\n                      (cell === 1 ? \"active\" : \"\") +\r\n                      \" \" +\r\n                      (cell === 2 ? \"target\" : \"\")\r\n                    }\r\n                  ></td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <p>空格暂停 上下左右移动</p>\r\n        <button onClick={this.reset}>重新开始</button>\r\n        <p className=\"score\">得分：{this.state.score}</p>\r\n        {this.state.end ? <p className=\"msg\">{this.state.endMsg}</p> : null}\r\n        {this.state.pause ? <p className=\"msg\">暂停中...</p> : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// hooks 版本\r\nconst Snake = () => {\r\n  const countRef = useRef(20)\r\n  const snakeRef = useRef()\r\n  const directionRef = useRef(\"R\")\r\n  const targetRef = useRef([])\r\n  const timeRef = useRef(200)\r\n  const intervalRef = useRef(-1)\r\n  const [score, setScore] = useState(0)\r\n  const [pause, setPause] = useState(false)\r\n  const [end, setEnd] = useState(false)\r\n  const [endMsg, setEndMsg] = useState(\"\")\r\n  const [mapData, setMapData] = useState([])\r\n\r\n  const exit = useCallback((p) => {\r\n    let _exit = false\r\n    snakeRef.current.forEach((e) => {\r\n      if (p[0] === e[0] && p[1] === e[1]) {\r\n        _exit = true\r\n        return\r\n      }\r\n    })\r\n    return _exit\r\n  }, [])\r\n\r\n  const createOneTarget = useCallback(() => {\r\n    var valid = false,\r\n      x,\r\n      y,\r\n      food,\r\n      number = Math.ceil(Math.random() * countRef.current * countRef.current)\r\n    while (!valid) {\r\n      x = (number - 1) % countRef.current\r\n      y = Math.ceil(number / countRef.current) - 1\r\n      food = [x, y]\r\n      if (exit(food)) {\r\n        number++\r\n        if (number > countRef.current * countRef.current) {\r\n          number = number - countRef.current * countRef.current\r\n        }\r\n      } else {\r\n        valid = true\r\n      }\r\n    }\r\n    setMapData((mapData) => {\r\n      mapData[y][x] = 2\r\n      return mapData\r\n    })\r\n    targetRef.current = food\r\n  }, [exit])\r\n\r\n  const createNewHead = useCallback(() => {\r\n    var _head = snakeRef.current[0]\r\n    var _newHead = []\r\n    switch (directionRef.current) {\r\n      case \"U\":\r\n        _newHead[0] = _head[0]\r\n        _newHead[1] = _head[1] - 1\r\n        break\r\n      case \"D\":\r\n        _newHead[0] = _head[0]\r\n        _newHead[1] = _head[1] + 1\r\n        break\r\n      case \"L\":\r\n        _newHead[0] = _head[0] - 1\r\n        _newHead[1] = _head[1]\r\n        break\r\n      case \"R\":\r\n        _newHead[0] = _head[0] + 1\r\n        _newHead[1] = _head[1]\r\n        break\r\n      default:\r\n        break\r\n    }\r\n    return _newHead\r\n  }, [])\r\n\r\n  const move = useCallback(() => {\r\n    let _newHead = createNewHead()\r\n    let _snake = JSON.parse(JSON.stringify(snakeRef.current))\r\n    let _tail = []\r\n    //是否超出边界\r\n    if (\r\n      _newHead[0] < 0 ||\r\n      _newHead[1] < 0 ||\r\n      _newHead[0] > countRef.current - 1 ||\r\n      _newHead[1] > countRef.current - 1\r\n    ) {\r\n      clearInterval(intervalRef.current)\r\n      setEnd(true)\r\n      setEndMsg(\"游戏结束！\")\r\n      return\r\n    } else {\r\n      //是否撞到自己\r\n      if (exit(_newHead)) {\r\n        clearInterval(intervalRef.current)\r\n        setEnd(true)\r\n        setEndMsg(\"游戏结束！\")\r\n        return\r\n      }\r\n    }\r\n    _snake.unshift(_newHead)\r\n    if (\r\n      targetRef.current.length === 2 &&\r\n      _newHead.join(\"-\") === targetRef.current.join(\"-\")\r\n    ) {\r\n      setScore((prevScore) => prevScore + 1)\r\n      if (_snake.length === countRef.current * countRef.current) {\r\n        clearInterval(intervalRef.current)\r\n        setEnd(true)\r\n        setEndMsg(\"You Win\")\r\n      } else {\r\n        createOneTarget()\r\n      }\r\n    } else {\r\n      _tail = _snake.pop()\r\n    }\r\n    snakeRef.current = _snake\r\n    setMapData((mapData) => {\r\n      let _mapData = JSON.parse(JSON.stringify(mapData))\r\n      if (_newHead.length) {\r\n        _mapData[_newHead[1]][_newHead[0]] = 1\r\n      }\r\n      if (_tail.length) {\r\n        _mapData[_tail[1]][_tail[0]] = 0\r\n      }\r\n      return _mapData\r\n    })\r\n  }, [createNewHead, createOneTarget, exit])\r\n\r\n  const keydownEvent = useCallback(\r\n    (e) => {\r\n      switch (e.keyCode) {\r\n        case 38:\r\n          directionRef.current =\r\n            directionRef.current !== \"D\" ? \"U\" : directionRef.current\r\n          break\r\n        case 40:\r\n          directionRef.current =\r\n            directionRef.current !== \"U\" ? \"D\" : directionRef.current\r\n          break\r\n        case 37:\r\n          directionRef.current =\r\n            directionRef.current !== \"R\" ? \"L\" : directionRef.current\r\n          break\r\n        case 39:\r\n          directionRef.current =\r\n            directionRef.current !== \"L\" ? \"R\" : directionRef.current\r\n          break\r\n        case 32:\r\n          if (!end) {\r\n            setPause((pause) => !pause)\r\n            if (intervalRef.current === -1) {\r\n              intervalRef.current = setInterval(move, timeRef.current)\r\n            } else {\r\n              clearInterval(intervalRef.current)\r\n              intervalRef.current = -1\r\n            }\r\n          }\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    },\r\n    [end, move]\r\n  )\r\n\r\n  const initMap = useCallback(() => {\r\n    snakeRef.current = [\r\n      [4, 0],\r\n      [3, 0],\r\n      [2, 0],\r\n      [1, 0],\r\n      [0, 0],\r\n    ]\r\n\r\n    let _data = []\r\n    for (let i = 0; i < countRef.current; i++) {\r\n      let _row = []\r\n      for (let j = 0; j < countRef.current; j++) {\r\n        _row.push(0)\r\n      }\r\n      _data.push(_row)\r\n    }\r\n    snakeRef.current.forEach((e) => {\r\n      _data[e[1]][e[0]] = 1\r\n    })\r\n    setMapData(_data)\r\n    createOneTarget()\r\n  }, [createOneTarget])\r\n\r\n  useEffect(() => {\r\n    initMap()\r\n  }, [initMap])\r\n\r\n  useEffect(() => {\r\n    intervalRef.current = setInterval(move, timeRef.current)\r\n    return () => {\r\n      clearInterval(intervalRef.current)\r\n    }\r\n  }, [move])\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", keydownEvent)\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", keydownEvent)\r\n    }\r\n  }, [keydownEvent])\r\n\r\n  const reset = () => {\r\n    clearInterval(intervalRef.current)\r\n    directionRef.current = \"R\"\r\n    intervalRef.current = setInterval(move, timeRef.current)\r\n    setScore(0)\r\n    setEnd(false)\r\n    setEndMsg(\"\")\r\n    setPause(false)\r\n    initMap()\r\n  }\r\n\r\n  return (\r\n    <div className=\"snake-container\">\r\n      <table>\r\n        <tbody>\r\n          {mapData.map((row, i) => (\r\n            <tr key={i}>\r\n              {row.map((cell, j) => (\r\n                <td\r\n                  key={i + \"-\" + j}\r\n                  className={\r\n                    (cell === 1 ? \"active\" : \"\") +\r\n                    \" \" +\r\n                    (cell === 2 ? \"target\" : \"\")\r\n                  }\r\n                ></td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <p>空格暂停 上下左右移动</p>\r\n      <button onClick={reset}>重新开始</button>\r\n      <p className=\"score\">得分：{score}</p>\r\n      {end ? <p className=\"msg\">{endMsg}</p> : null}\r\n      {pause ? <p className=\"msg\">暂停中...</p> : null}\r\n    </div>\r\n  )\r\n}\r\nexport default Snake\r\n","import Snake from \"./Snake\"\r\nexport default {\r\n  name: \"game\",\r\n  routes: [\r\n    {\r\n      name: \"snake\",\r\n      path: \"/game/snake\",\r\n      component: Snake,\r\n    },\r\n  ],\r\n}\r\n","import React, { Fragment } from \"react\"\nimport { Route as ReactRoute, Switch } from \"react-router-dom\"\nimport modules from \"../modules\"\n\nconst getAllRoutes = (mods) => {\n  const _allRoutes = []\n  mods.forEach((mod) => {\n    _allRoutes.push(...mod.routes)\n  })\n  return _allRoutes\n}\n\nconst PrimaryContent = () => {\n  const allRoutes = getAllRoutes(modules)\n  return (\n    <Switch>\n      <Fragment>\n        {allRoutes.map((route) => {\n          let PageComponent = route.component\n          return (\n            <ReactRoute\n              exact\n              key={route.path}\n              path={route.path}\n              render={(routeprops) => <PageComponent {...routeprops} />}\n            />\n          )\n        })}\n      </Fragment>\n    </Switch>\n  )\n}\n\nexport default PrimaryContent\n","import React, { useState } from \"react\"\nimport { Layout } from \"antd\"\nimport { useHistory } from \"react-router-dom\"\nimport LoginLayout from \"./LoginLayout\"\nimport PrimaryMenu from \"./PrimaryMenu\"\nimport PrimaryHeader from \"./PrimaryHeader\"\nimport PrimaryContent from \"./PrimaryContent\"\nimport \"./layout.less\"\n\nconst { Sider } = Layout\n\nexport const LayoutContext = React.createContext()\n\nconst PrimaryLayout = () => {\n  const [collapsed, setCollapsed] = useState(false)\n  const toggleCollapse = () => {\n    setCollapsed(!collapsed)\n  }\n  const history = useHistory()\n\n  window.onhashchange = () => {\n    if (history.location.pathname === \"/login\") {\n      history.push(\"/\")\n    }\n  }\n  if (!localStorage.getItem(\"LOGIN\")) {\n    return <LoginLayout />\n  }\n  return (\n    <LayoutContext.Provider value={{ collapsed, toggleCollapse }}>\n      <Layout className=\"primary-layout\">\n        <Sider\n          className=\"primary-sider\"\n          trigger={null}\n          collapsible\n          collapsed={collapsed}\n        >\n          <PrimaryMenu />\n        </Sider>\n        <Layout>\n          <PrimaryHeader />\n          <div className=\"primary-content\">\n            <PrimaryContent />\n          </div>\n        </Layout>\n      </Layout>\n    </LayoutContext.Provider>\n  )\n}\n\nexport default PrimaryLayout\n","import React from \"react\"\nimport { HashRouter } from \"react-router-dom\"\nimport { ConfigProvider } from \"antd\"\nimport zhCN from \"antd/es/locale/zh_CN\"\nimport PrimaryLayout from \"./layout/PrimaryLayout\"\n\nconst App = () => {\n  return (\n    <ConfigProvider locale={zhCN}>\n      <HashRouter basename=\"/\">\n        <PrimaryLayout></PrimaryLayout>\n      </HashRouter>\n    </ConfigProvider>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./reset.less\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}